{"ast":null,"code":"var _jsxFileName = \"/Users/ericg/Desktop/SNHS/Mosquito/Moisture-Web/client/src/LineChart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport { ProgressBar } from 'react-bootstrap';\nimport { Line } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\n\nconst LineChart = chart => {\n  _s();\n\n  let [vBat, setVBat] = useState(0);\n  useEffect(() => {\n    var _chart$data, _chart$data$slice$pop;\n\n    setVBat(chart === null || chart === void 0 ? void 0 : (_chart$data = chart.data) === null || _chart$data === void 0 ? void 0 : (_chart$data$slice$pop = _chart$data.slice(-1).pop()) === null || _chart$data$slice$pop === void 0 ? void 0 : _chart$data$slice$pop.VBat); //some reason would'nt let me access vBat from final index like a normal person\n  }, [chart]); //Rerenders when chart updates. Originally, vBat would remain unchanged since its state would never change. By passing the prop as an argument, the page renders with the asynchronous passing of chart (chart was passed through an async array)\n\n  var data = {\n    labels: chart === null || chart === void 0 ? void 0 : chart.data.map(x => String(x.expirationSet).substring(0, 10)),\n    datasets: [{\n      label: 'Temperature',\n      data: chart === null || chart === void 0 ? void 0 : chart.data.map(x => x.temp),\n      backgroundColor: ['rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)'],\n      borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'],\n      borderWidth: 1\n    }]\n  };\n  var moistureData = {\n    labels: chart === null || chart === void 0 ? void 0 : chart.data.map(x => x.description),\n    datasets: [{\n      label: 'Soil Moisture',\n      data: chart === null || chart === void 0 ? void 0 : chart.data.map(x => x.soilMoisture),\n      backgroundColor: ['rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)'],\n      borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'],\n      borderWidth: 1\n    }]\n  };\n  var options = {\n    maintainAspectRatio: false,\n    scales: {},\n    legend: {\n      labels: {\n        fontSize: 25\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progressBar\",\n      children: [\"Battery Voltage\", /*#__PURE__*/_jsxDEV(ProgressBar, {\n        now: vBat\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), \"percentage: \", vBat]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        data: data,\n        height: 400,\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"moistureGraph\",\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        data: moistureData,\n        height: 400,\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LineChart, \"NfR80OUy75bbjiI5i/ReFk0rZRw=\");\n\n_c = LineChart;\nexport default LineChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"sources":["/Users/ericg/Desktop/SNHS/Mosquito/Moisture-Web/client/src/LineChart.js"],"names":["React","useState","useEffect","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","ProgressBar","Line","register","LineChart","chart","vBat","setVBat","data","slice","pop","VBat","labels","map","x","String","expirationSet","substring","datasets","label","temp","backgroundColor","borderColor","borderWidth","moistureData","description","soilMoisture","options","maintainAspectRatio","scales","legend","fontSize"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\nimport { ProgressBar } from 'react-bootstrap';\nimport { Line } from 'react-chartjs-2';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\n\n\n\n\n\n\nconst LineChart = (chart) => {\n  let [vBat, setVBat] = useState(0)\n  useEffect(() => {\n    setVBat(chart ?.data ?.slice(-1).pop() ?.VBat) //some reason would'nt let me access vBat from final index like a normal person\n\n  }, [chart]) //Rerenders when chart updates. Originally, vBat would remain unchanged since its state would never change. By passing the prop as an argument, the page renders with the asynchronous passing of chart (chart was passed through an async array)\n\n\n\n\n\n\n  var data = {\n    labels: chart ?.data.map(x => String(x.expirationSet).substring(0, 10)),\n    datasets: [{\n      label: 'Temperature',\n      data: chart ?.data.map(x => x.temp),\n      backgroundColor: [\n        'rgba(255, 99, 132, 0.2)',\n        'rgba(54, 162, 235, 0.2)',\n        'rgba(255, 206, 86, 0.2)',\n        'rgba(75, 192, 192, 0.2)',\n        'rgba(153, 102, 255, 0.2)',\n        'rgba(255, 159, 64, 0.2)'\n      ],\n      borderColor: [\n        'rgba(255, 99, 132, 1)',\n        'rgba(54, 162, 235, 1)',\n        'rgba(255, 206, 86, 1)',\n        'rgba(75, 192, 192, 1)',\n        'rgba(153, 102, 255, 1)',\n        'rgba(255, 159, 64, 1)'\n      ],\n      borderWidth: 1\n    }]\n  };\n\n  var moistureData = {\n    labels: chart ?.data.map(x => x.description),\n    datasets: [{\n      label: 'Soil Moisture',\n      data: chart ?.data.map(x => x.soilMoisture),\n      backgroundColor: [\n        'rgba(255, 99, 132, 0.2)',\n        'rgba(54, 162, 235, 0.2)',\n        'rgba(255, 206, 86, 0.2)',\n        'rgba(75, 192, 192, 0.2)',\n        'rgba(153, 102, 255, 0.2)',\n        'rgba(255, 159, 64, 0.2)'\n      ],\n      borderColor: [\n        'rgba(255, 99, 132, 1)',\n        'rgba(54, 162, 235, 1)',\n        'rgba(255, 206, 86, 1)',\n        'rgba(75, 192, 192, 1)',\n        'rgba(153, 102, 255, 1)',\n        'rgba(255, 159, 64, 1)'\n      ],\n      borderWidth: 1\n    }]\n  };\n\n  var options = {\n    maintainAspectRatio: false,\n    scales: {\n    },\n    legend: {\n      labels: {\n        fontSize: 25,\n      },\n    },\n  }\n\n\n  return (\n    <div>\n      <div className=\"progressBar\">\n        Battery Voltage\n                <ProgressBar now={vBat} />\n        percentage: {vBat}\n      </div>\n      <div>\n        <Line\n          data={data}\n          height={400}\n          options={options}\n\n        />\n      </div>\n      <br />\n      <br />\n      <div className='moistureGraph'>\n        <Line\n          data={moistureData}\n          height={400}\n          options={options}\n        />\n\n      </div></div>\n  )\n}\n\nexport default LineChart"]},"metadata":{},"sourceType":"module"}