{"ast":null,"code":"var _jsxFileName = \"/Users/ericg/Desktop/SNHS/Mosquito/Moisture-Web/client/src/Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport 'react-bootstrap';\nimport Nav from './features/navBar';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport { Line } from 'react-chartjs-2';\nimport Chart from 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cooperCityWeatherId = 4151824;\nconst apiKey = process.env.REACT_APP_WEATHER_KEY;\nconst data = {\n  labels: ['Jan', 'Mar', 'May', 'July', 'Oct'],\n  datasets: [{\n    label: 'Iphone sales',\n    data: [400, 1000, 4000, 800, 1500],\n    fill: true,\n    backgroundColor: \"#2e4355\",\n    pointBorderColor: \"#8884d8\",\n    pointBorderWidth: 5,\n    pointRadius: 8,\n    tension: 0.4\n  }]\n};\nconst WeatherApiUrl = `http://api.openweathermap.org/data/2.5/weather?id=${cooperCityWeatherId}&appid=${apiKey}`;\n\nfunction Home() {\n  _s();\n\n  //usestate of weather data, can be an array\n  //useState of soil Moisture data, can also be an array\n  const [weatherData, setWeatherData] = useState({\n    main: '',\n    weather: [],\n    temp: []\n  });\n  const [soilMoisture, setSoilMoisture] = useState({\n    soilMoisture: ''\n  }); //const [chartData, setChartData] = useState({})\n  //API data with a promise resolve nad useEffect\n\n  useEffect(() => {\n    const fetchData = () => {\n      Promise.all([fetch(WeatherApiUrl).then(resp => resp.json()).then(weather => setWeatherData({\n        main: weather.main,\n        weather: weather.weather,\n        temp: [...weatherData.temp, weather.main.temp]\n      })) //fetch('/api').then(resp => resp.json()).then(moisture => setSoilMoisture(moisture)),\n      ]);\n    };\n\n    fetchData();\n    console.log(weatherData.weather[0].description); //    setChartData({\n    //     labels: ['pog'],\n    //   datasets: [\n    //     {\n    //       label: \"Soil Moisture\",\n    //       data: [69],\n    //       backgroundColor: [\"rgba(75, 192, 192, 0.6)\"],\n    //       borderWidth: 4\n    //     }\n    //   ]\n    // });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Home\",\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        data: data,\n        redraw: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Home, \"So8z8eMqcEp5hk15xuYUNIDY08I=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/ericg/Desktop/SNHS/Mosquito/Moisture-Web/client/src/Home.js"],"names":["React","useState","useEffect","Link","Nav","Line","Chart","cooperCityWeatherId","apiKey","process","env","REACT_APP_WEATHER_KEY","data","labels","datasets","label","fill","backgroundColor","pointBorderColor","pointBorderWidth","pointRadius","tension","WeatherApiUrl","Home","weatherData","setWeatherData","main","weather","temp","soilMoisture","setSoilMoisture","fetchData","Promise","all","fetch","then","resp","json","console","log","description"],"mappings":";;;AACA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAO,iBAAP;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAO,sDAAP;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,OAAOC,KAAP,MAAkB,eAAlB;;AAMA,MAAMC,mBAAmB,GAAG,OAA5B;AACA,MAAMC,MAAM,GAAGC,OAAO,CAACC,GAAR,CAAYC,qBAA3B;AAGA,MAAMC,IAAI,GAAG;AACTC,EAAAA,MAAM,EAAE,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,MAAtB,EAA8B,KAA9B,CADC;AAETC,EAAAA,QAAQ,EAAE,CACR;AACEC,IAAAA,KAAK,EAAE,cADT;AAEEH,IAAAA,IAAI,EAAE,CAAC,GAAD,EAAM,IAAN,EAAY,IAAZ,EAAkB,GAAlB,EAAuB,IAAvB,CAFR;AAGEI,IAAAA,IAAI,EAAE,IAHR;AAIEC,IAAAA,eAAe,EAAC,SAJlB;AAKEC,IAAAA,gBAAgB,EAAC,SALnB;AAMEC,IAAAA,gBAAgB,EAAC,CANnB;AAOEC,IAAAA,WAAW,EAAC,CAPd;AAQEC,IAAAA,OAAO,EAAE;AARX,GADQ;AAFD,CAAb;AAiBA,MAAMC,aAAa,GAAI,qDAAoDf,mBAAoB,UAASC,MAAO,EAA/G;;AAEA,SAASe,IAAT,GAAe;AAAA;;AACX;AACA;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCxB,QAAQ,CAAC;AAACyB,IAAAA,IAAI,EAAE,EAAP;AAAWC,IAAAA,OAAO,EAAG,EAArB;AAAyBC,IAAAA,IAAI,EAAE;AAA/B,GAAD,CAA9C;AACA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkC7B,QAAQ,CAAC;AAAC4B,IAAAA,YAAY,EAAE;AAAf,GAAD,CAAhD,CAJW,CAKX;AAGA;;AACA3B,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAM6B,SAAS,GAAG,MAAK;AAEnBC,MAAAA,OAAO,CAACC,GAAR,CAAY,CACRC,KAAK,CAACZ,aAAD,CAAL,CAAqBa,IAArB,CAA2BC,IAAD,IAASA,IAAI,CAACC,IAAL,EAAnC,EAAgDF,IAAhD,CAAqDR,OAAO,IAAIF,cAAc,CAAC;AAACC,QAAAA,IAAI,EAAGC,OAAO,CAACD,IAAhB;AAAsBC,QAAAA,OAAO,EAAGA,OAAO,CAACA,OAAxC;AAAiDC,QAAAA,IAAI,EAAE,CAAC,GAAGJ,WAAW,CAACI,IAAhB,EAAsBD,OAAO,CAACD,IAAR,CAAaE,IAAnC;AAAvD,OAAD,CAA9E,CADQ,CAER;AAFQ,OAAZ;AAKH,KAPD;;AAUDG,IAAAA,SAAS;AACTO,IAAAA,OAAO,CAACC,GAAR,CAAYf,WAAW,CAACG,OAAZ,CAAoB,CAApB,EAAuBa,WAAnC,EAZa,CAahB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKC,GA5BQ,EA4BP,EA5BO,CAAT;AA+BA,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACI,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,6BAEA,QAAC,IAAD;AAAM,QAAA,IAAI,EAAE5B,IAAZ;AAAkB,QAAA,MAAM;AAAxB;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH;;GAxDQW,I;;KAAAA,I;AAyDT,eAAeA,IAAf","sourcesContent":["\nimport React, {useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport 'react-bootstrap';\nimport Nav from './features/navBar' ;\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport { Line } from 'react-chartjs-2';\nimport Chart from 'chart.js/auto'\n\n\n\n\n\nconst cooperCityWeatherId = 4151824;\nconst apiKey = process.env.REACT_APP_WEATHER_KEY;\n\n\nconst data = {\n    labels: ['Jan', 'Mar', 'May', 'July', 'Oct'],\n    datasets: [\n      {\n        label: 'Iphone sales',\n        data: [400, 1000, 4000, 800, 1500],\n        fill: true,\n        backgroundColor:\"#2e4355\",\n        pointBorderColor:\"#8884d8\",\n        pointBorderWidth:5,\n        pointRadius:8,\n        tension: 0.4\n      },\n    ],\n  };\n\n\nconst WeatherApiUrl = `http://api.openweathermap.org/data/2.5/weather?id=${cooperCityWeatherId}&appid=${apiKey}`\n\nfunction Home(){\n    //usestate of weather data, can be an array\n    //useState of soil Moisture data, can also be an array\n    const [weatherData, setWeatherData] = useState({main: '', weather : [], temp: []});\n    const [soilMoisture, setSoilMoisture] = useState({soilMoisture: ''});\n    //const [chartData, setChartData] = useState({})\n\n    \n    //API data with a promise resolve nad useEffect\n    useEffect(() => {\n        const fetchData = () =>{\n            \n            Promise.all([\n                fetch(WeatherApiUrl).then((resp)=> resp.json()).then(weather => setWeatherData({main : weather.main, weather : weather.weather, temp: [...weatherData.temp, weather.main.temp]}))\n                //fetch('/api').then(resp => resp.json()).then(moisture => setSoilMoisture(moisture)),\n            ])\n        \n        }\n        \n        \n       fetchData()\n       console.log(weatherData.weather[0].description)\n    //    setChartData({\n    //     labels: ['pog'],\n    //   datasets: [\n    //     {\n    //       label: \"Soil Moisture\",\n    //       data: [69],\n    //       backgroundColor: [\"rgba(75, 192, 192, 0.6)\"],\n    //       borderWidth: 4\n    //     }\n    //   ]\n    // });\n       \n       \n    \n       \n    },[])\n    \n\n    return(\n        <div className=\"Home\">\n            <Nav />\n            <div>\n                \n            <Line data={data} redraw />\n            </div>\n        </div>\n\n        \n        \n    );\n\n\n\n\n}\nexport default Home;\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}