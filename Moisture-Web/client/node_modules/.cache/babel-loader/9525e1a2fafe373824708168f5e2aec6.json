{"ast":null,"code":"var _jsxFileName = \"/Users/ericg/Desktop/SNHS/Mosquito/Moisture-Web/client/src/Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { ProgressBar } from 'react-bootstrap';\nimport Nav from './features/navBar';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport LineChart from './LineChart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Home() {\n  _s();\n\n  //usestate of weather data, can be an array\n  //useState of soil Moisture data, can also be an array\n  const [restAPI, setRestAPI] = useState([]);\n  /* form of \n      [temp : 25,\n  humidity : 88,\n  pressure : 101325,\n  description : 'sun',\n      weathercode : 200\n      soilMoisture : 100\n      VBat: 69]\n      \n      add picture functionality.\n  */\n  //const [chartData, setChartData] = useState({})\n  //API data with a promise resolve nad useEffect\n\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchData = async () => {\n      fetch('/api').then(re => {\n        if (re.ok) {\n          return re.json();\n        }\n\n        throw re;\n      }).then(data => {\n        setRestAPI(data);\n        console.log(data);\n      }).catch(err => {\n        console.log(err);\n      }).finally(() => {\n        setLoading(false);\n      }); // let response = await fetch('/api');\n      // let data = await response.json();\n      // setRestAPI(data);\n      // console.log(restAPI);\n    };\n\n    fetchData();\n  }, []);\n  console.log(restAPI);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Home\",\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progressBar\",\n      children: [\"Battery Voltage\", /*#__PURE__*/_jsxDEV(ProgressBar, {\n        now: restAPI === null || restAPI === void 0 ? void 0 : restAPI.at(-1).VBat\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(LineChart, {\n        data: restAPI\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Home, \"tSdHQ7GKhyR0U3YmHRdTLWTRAtM=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/ericg/Desktop/SNHS/Mosquito/Moisture-Web/client/src/Home.js"],"names":["React","useState","useEffect","Link","ProgressBar","Nav","LineChart","Home","restAPI","setRestAPI","loading","setLoading","fetchData","fetch","then","re","ok","json","data","console","log","catch","err","finally","at","VBat"],"mappings":";;;AACA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAAQC,WAAR,QAA0B,iBAA1B;AAEA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAO,sDAAP;AACA,OAAOC,SAAP,MAAsB,aAAtB;;;AAUA,SAASC,IAAT,GAAe;AAAA;;AACX;AACA;AAEA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,EAAD,CAAtC;AAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AAGA;;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,IAAD,CAAtC;AACAC,EAAAA,SAAS,CAAC,MAAM;AAEZ,UAAMU,SAAS,GAAE,YAAS;AAEtBC,MAAAA,KAAK,CAAC,MAAD,CAAL,CAAcC,IAAd,CAAmBC,EAAE,IAAE;AACnB,YAAIA,EAAE,CAACC,EAAP,EAAU;AACN,iBAAOD,EAAE,CAACE,IAAH,EAAP;AACH;;AACD,cAAMF,EAAN;AACH,OALD,EAKGD,IALH,CAKQI,IAAI,IAAI;AACZT,QAAAA,UAAU,CAACS,IAAD,CAAV;AACDC,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AAEF,OATD,EASGG,KATH,CASSC,GAAG,IAAG;AACXH,QAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACH,OAXD,EAWGC,OAXH,CAWW,MAAI;AACXZ,QAAAA,UAAU,CAAC,KAAD,CAAV;AAEH,OAdD,EAFsB,CAiBtB;AACA;AACA;AACA;AAEH,KAtBD;;AAwBJC,IAAAA,SAAS;AAER,GA5BQ,EA4BP,EA5BO,CAAT;AA+BAO,EAAAA,OAAO,CAACC,GAAR,CAAYZ,OAAZ;AACA,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACI,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAE,aAAhB;AAAA,iDAEI,QAAC,WAAD;AAAa,QAAA,GAAG,EAAIA,OAAJ,aAAIA,OAAJ,uBAAIA,OAAO,CAAEgB,EAAT,CAAY,CAAC,CAAb,EAAgBC;AAApC;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAMI;AAAA,6BAEC,QAAC,SAAD;AAAW,QAAA,IAAI,EAAIjB;AAAnB;AAAA;AAAA;AAAA;AAAA;AAFD;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH;;GA1EQD,I;;KAAAA,I;AA2ET,eAAeA,IAAf","sourcesContent":["\nimport React, {useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport {ProgressBar} from 'react-bootstrap';\n\nimport Nav from './features/navBar' ;\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport LineChart from './LineChart'\n\n\n\n\n\n\n\n\n\nfunction Home(){\n    //usestate of weather data, can be an array\n    //useState of soil Moisture data, can also be an array\n    \n    const [restAPI, setRestAPI] = useState([]);\n\n    /* form of \n        [temp : 25,\n\t\thumidity : 88,\n\t\tpressure : 101325,\n\t\tdescription : 'sun',\n        weathercode : 200\n        soilMoisture : 100\n        VBat: 69]\n        \n        add picture functionality.\n    */\n    //const [chartData, setChartData] = useState({})\n\n    \n    //API data with a promise resolve nad useEffect\n    const [loading, setLoading] = useState(true);\n    useEffect(() => {\n        \n        const fetchData =async()=>{\n        \n            fetch('/api').then(re=>{\n                if (re.ok){\n                    return re.json()\n                }\n                throw re\n            }).then(data => {\n                setRestAPI(data)\n               console.log(data)\n               \n            }).catch(err =>{\n                console.log(err)\n            }).finally(()=>{\n                setLoading(false);\n               \n            })\n            // let response = await fetch('/api');\n            // let data = await response.json();\n            // setRestAPI(data);\n            // console.log(restAPI);\n            \n        }\n        \n    fetchData()\n       \n    },[])\n    \n    \n    console.log(restAPI)\n    return(\n        <div className=\"Home\">\n            <Nav />\n            <div className =\"progressBar\">\n                Battery Voltage\n                <ProgressBar now = {restAPI?.at(-1).VBat}/>\n            </div>\n            <div>\n                \n             <LineChart data = {restAPI}/>   \n            </div>\n        </div>\n\n        \n        \n    );\n\n\n\n\n}\nexport default Home;\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}