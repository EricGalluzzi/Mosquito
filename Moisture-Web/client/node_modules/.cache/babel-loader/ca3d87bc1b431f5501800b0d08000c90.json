{"ast":null,"code":"var _jsxFileName = \"/Users/ericg/Desktop/SNHS/Mosquito/Moisture-Web/client/src/Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { ProgressBar } from 'react-bootstrap';\nimport Nav from './features/navBar';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport LineChart from './LineChart';\nimport LineChartTest from './testFeatures/LineChartTest';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Home() {\n  _s();\n\n  //usestate of weather data, can be an array\n  //useState of soil Moisture data, can also be an array\n  const [restAPI, setRestAPI] = useState([]);\n  /* form of \n      [temp : 25,\n  humidity : 88,\n  pressure : 101325,\n  description : 'sun',\n      weathercode : 200\n      soilMoisture : 100\n      VBat: 69]\n      \n      add picture functionality.\n  */\n\n  const [loading, setLoading] = useState(true);\n  const [err, setError] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      //used callback hell because await was throwing issues\n      fetch('http://localhost:3001/api').then(re => {\n        if (re.ok) {\n          return re.json();\n        }\n\n        throw re;\n      }).then(data => {\n        setRestAPI(data);\n        console.log(data);\n      }).catch(err => {\n        console.log(err); //setError(err)\n      }).finally(() => {\n        setLoading(false);\n      });\n    };\n\n    fetchData();\n  }, []); //refresh feature might not be needed if recordings are taken out at long spaced out intervals\n\n  if (err) return \"error\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Home\",\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(LineChartTest, {\n        data: [{\n          \"_id\": \"61dcf08892345810681c7f7b\",\n          \"temp\": 21.89,\n          \"humidity\": 80,\n          \"pressure\": 1021,\n          \"description\": \"clear sky\",\n          \"weathercode\": 800,\n          \"rain\": 0,\n          \"soilMoisture\": [69, 100],\n          \"VBat\": 100,\n          \"expirationSet\": \"2022-01-11T02:50:48.753Z\"\n        }, {\n          \"_id\": \"61dcf08892345810681c7f7b\",\n          \"temp\": 21.89,\n          \"humidity\": 80,\n          \"pressure\": 1021,\n          \"description\": \"clear sky\",\n          \"weathercode\": 800,\n          \"rain\": 0,\n          \"soilMoisture\": [69, 67],\n          \"VBat\": 100,\n          \"expirationSet\": \"2022-01-11T02:50:48.753Z\"\n        }]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Home, \"Z4IM6CeKIv+cRUVhfa1IyGxTQdI=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/ericg/Desktop/SNHS/Mosquito/Moisture-Web/client/src/Home.js"],"names":["React","useState","useEffect","Link","ProgressBar","Nav","LineChart","LineChartTest","Home","restAPI","setRestAPI","loading","setLoading","err","setError","fetchData","fetch","then","re","ok","json","data","console","log","catch","finally"],"mappings":";;;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,WAAT,QAA4B,iBAA5B;AAEA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAO,sDAAP;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,aAAP,MAA0B,8BAA1B;;;AAEA,SAASC,IAAT,GAAgB;AAAA;;AACZ;AACA;AAEA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,EAAD,CAAtC;AAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACI,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACY,GAAD,EAAMC,QAAN,IAAkBb,QAAQ,CAAC,IAAD,CAAhC;AACAC,EAAAA,SAAS,CAAC,MAAM;AAEZ,UAAMa,SAAS,GAAG,YAAY;AAAE;AAE5BC,MAAAA,KAAK,CAAC,2BAAD,CAAL,CAAmCC,IAAnC,CAAwCC,EAAE,IAAI;AAC1C,YAAIA,EAAE,CAACC,EAAP,EAAW;AACP,iBAAOD,EAAE,CAACE,IAAH,EAAP;AACH;;AACD,cAAMF,EAAN;AACH,OALD,EAKGD,IALH,CAKQI,IAAI,IAAI;AACZX,QAAAA,UAAU,CAACW,IAAD,CAAV;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AAEH,OATD,EASGG,KATH,CASSX,GAAG,IAAI;AACZS,QAAAA,OAAO,CAACC,GAAR,CAAYV,GAAZ,EADY,CAEZ;AACH,OAZD,EAYGY,OAZH,CAYW,MAAM;AACbb,QAAAA,UAAU,CAAC,KAAD,CAAV;AAEH,OAfD;AAkBH,KApBD;;AAsBAG,IAAAA,SAAS;AAGZ,GA3BQ,EA2BN,EA3BM,CAAT,CAnBY,CA8CL;;AAEP,MAAIF,GAAJ,EAAS,OAAO,OAAP;AAET,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACI,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,6BACI,QAAC,aAAD;AAAe,QAAA,IAAI,EAAE,CAAC;AAAC,iBAAM,0BAAP;AAAkC,kBAAO,KAAzC;AAA+C,sBAAW,EAA1D;AAA6D,sBAAW,IAAxE;AAA6E,yBAAc,WAA3F;AAAuG,yBAAc,GAArH;AAAyH,kBAAO,CAAhI;AAAkI,0BAAe,CAAC,EAAD,EAAI,GAAJ,CAAjJ;AAA0J,kBAAO,GAAjK;AAAqK,2BAAgB;AAArL,SAAD,EAAmN;AAAC,iBAAM,0BAAP;AAAkC,kBAAO,KAAzC;AAA+C,sBAAW,EAA1D;AAA6D,sBAAW,IAAxE;AAA6E,yBAAc,WAA3F;AAAuG,yBAAc,GAArH;AAAyH,kBAAO,CAAhI;AAAkI,0BAAe,CAAC,EAAD,EAAI,EAAJ,CAAjJ;AAAyJ,kBAAO,GAAhK;AAAoK,2BAAgB;AAApL,SAAnN;AAArB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH;;GA5DQL,I;;KAAAA,I;AA6DT,eAAeA,IAAf","sourcesContent":["\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { ProgressBar } from 'react-bootstrap';\n\nimport Nav from './features/navBar';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport LineChart from './LineChart'\nimport LineChartTest from './testFeatures/LineChartTest'\n\nfunction Home() {\n    //usestate of weather data, can be an array\n    //useState of soil Moisture data, can also be an array\n\n    const [restAPI, setRestAPI] = useState([]);\n\n    /* form of \n        [temp : 25,\n\t\thumidity : 88,\n\t\tpressure : 101325,\n\t\tdescription : 'sun',\n        weathercode : 200\n        soilMoisture : 100\n        VBat: 69]\n        \n        add picture functionality.\n    */\n    const [loading, setLoading] = useState(true);\n    const [err, setError] = useState(null)\n    useEffect(() => {\n\n        const fetchData = async () => { //used callback hell because await was throwing issues\n\n            fetch('http://localhost:3001/api').then(re => {\n                if (re.ok) {\n                    return re.json()\n                }\n                throw re\n            }).then(data => {\n                setRestAPI(data)\n                console.log(data)\n\n            }).catch(err => {\n                console.log(err)\n                //setError(err)\n            }).finally(() => {\n                setLoading(false);\n\n            })\n\n\n        }\n\n        fetchData()\n\n\n    }, []) //refresh feature might not be needed if recordings are taken out at long spaced out intervals\n\n    if (err) return \"error\";\n\n    return (\n        <div className=\"Home\">\n            <Nav />\n            <div>\n                <LineChartTest data={[{\"_id\":\"61dcf08892345810681c7f7b\",\"temp\":21.89,\"humidity\":80,\"pressure\":1021,\"description\":\"clear sky\",\"weathercode\":800,\"rain\":0,\"soilMoisture\":[69,100],\"VBat\":100,\"expirationSet\":\"2022-01-11T02:50:48.753Z\"}, {\"_id\":\"61dcf08892345810681c7f7b\",\"temp\":21.89,\"humidity\":80,\"pressure\":1021,\"description\":\"clear sky\",\"weathercode\":800,\"rain\":0,\"soilMoisture\":[69,67],\"VBat\":100,\"expirationSet\":\"2022-01-11T02:50:48.753Z\"}]} />\n            </div>\n        </div>\n\n    );\n\n}\nexport default Home;\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}