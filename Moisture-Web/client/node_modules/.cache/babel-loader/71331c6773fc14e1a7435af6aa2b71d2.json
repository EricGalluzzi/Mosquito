{"ast":null,"code":"import _asyncToGenerator from\"/Users/ericg/Desktop/SNHS/Mosquito/Moisture-Web/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/ericg/Desktop/SNHS/Mosquito/Moisture-Web/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/Users/ericg/Desktop/SNHS/Mosquito/Moisture-Web/client/node_modules/@babel/runtime/regenerator/index.js\";import React,{useState,useEffect}from'react';import'../App.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var apiKey=process.env.REACT_APP_WEATHER_KEY;// import GraphManager from './features/graphManager'\nfunction WeatherUpdate(){//usestate of weather data, can be an array\n//useState of soil Moisture data, can also be an array\nvar _useState=useState([]),_useState2=_slicedToArray(_useState,2),weatherAPI=_useState2[0],setWeatherAPI=_useState2[1];//will contain backend sensor data.\n/* form of \n        [temp : 25,\n\t\thumidity : 88,\n\t\tpressure : 101325,\n\t\tdescription : 'sun',\n        weathercode : 200\n        sM : 100\n        VBat: 69]\n        \n        add picture functionality.\n    */var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),loading=_useState4[0],setLoading=_useState4[1];//only display page once data is loaded\nvar _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),err=_useState6[0],setError=_useState6[1];// handle errors\nuseEffect(function(){//render website when mounted\nvar fetchData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0://used callback hell because await was throwing issues\nfetch(\"http://api.openweathermap.org/data/2.5/weather?id=4151824&appid=\".concat(apiKey)).then(function(re){if(re.ok){return re.json();}throw re;}).then(function(data){setWeatherAPI(data);console.log(data);}).catch(function(err){console.log(err);//setError(err)\n}).finally(function(){console.log(weatherAPI);setLoading(false);});case 1:case\"end\":return _context.stop();}}},_callee);}));return function fetchData(){return _ref.apply(this,arguments);};}();fetchData();},[]);if(err)return\"error\";if(loading)return\"loading\";return/*#__PURE__*/_jsxs(\"div\",{className:\"WeatherData\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Weather in the Coop\"}),/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsxs(\"li\",{children:[\"Temperature: \",((weatherAPI.main.temp-273.15)*9/5+32).toFixed(2),\"\\xB0\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[\"Humidity: \",weatherAPI.main.humidity,\"% \"]}),/*#__PURE__*/_jsxs(\"li\",{children:[\"Description: \",weatherAPI.weather[0].description]}),/*#__PURE__*/_jsxs(\"li\",{children:[\"Some Extra Desc: \",weatherAPI.weather[0].main]})]})]});}export default WeatherUpdate;","map":{"version":3,"sources":["/Users/ericg/Desktop/SNHS/Mosquito/Moisture-Web/client/src/testFeatures/WeatherUpdate.js"],"names":["React","useState","useEffect","apiKey","process","env","REACT_APP_WEATHER_KEY","WeatherUpdate","weatherAPI","setWeatherAPI","loading","setLoading","err","setError","fetchData","fetch","then","re","ok","json","data","console","log","catch","finally","main","temp","toFixed","humidity","weather","description"],"mappings":"uaACA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAO,YAAP,C,wFACA,GAAMC,CAAAA,MAAM,CAAGC,OAAO,CAACC,GAAR,CAAYC,qBAA3B,CAEA;AAKA,QAASC,CAAAA,aAAT,EAAyB,CACrB;AACA;AAEA,cAAoCN,QAAQ,CAAC,EAAD,CAA5C,wCAAOO,UAAP,eAAmBC,aAAnB,eAAkD;AAElD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MACI,eAA8BR,QAAQ,CAAC,IAAD,CAAtC,yCAAOS,OAAP,eAAgBC,UAAhB,eAA8C;AAC9C,eAAwBV,QAAQ,CAAC,IAAD,CAAhC,yCAAOW,GAAP,eAAYC,QAAZ,eAAwC;AACxCX,SAAS,CAAC,UAAM,CAAE;AAEd,GAAMY,CAAAA,SAAS,0FAAG,mIAAc;AAE5BC,KAAK,2EAAoEZ,MAApE,EAAL,CAAmFa,IAAnF,CAAwF,SAAAC,EAAE,CAAI,CAC1F,GAAIA,EAAE,CAACC,EAAP,CAAW,CACP,MAAOD,CAAAA,EAAE,CAACE,IAAH,EAAP,CACH,CACD,KAAMF,CAAAA,EAAN,CACH,CALD,EAKGD,IALH,CAKQ,SAAAI,IAAI,CAAI,CACZX,aAAa,CAACW,IAAD,CAAb,CACAC,OAAO,CAACC,GAAR,CAAYF,IAAZ,EAEH,CATD,EASGG,KATH,CASS,SAAAX,GAAG,CAAI,CACZS,OAAO,CAACC,GAAR,CAAYV,GAAZ,EACA;AACH,CAZD,EAYGY,OAZH,CAYW,UAAM,CACbH,OAAO,CAACC,GAAR,CAAYd,UAAZ,EACAG,UAAU,CAAC,KAAD,CAAV,CAEH,CAhBD,EAFc,sDAAH,kBAATG,CAAAA,SAAS,0CAAf,CAuBAA,SAAS,GAGZ,CA5BQ,CA4BN,EA5BM,CAAT,CA+BA,GAAIF,GAAJ,CAAS,MAAO,OAAP,CACT,GAAIF,OAAJ,CAAa,MAAO,SAAP,CAEb,mBACI,aAAK,SAAS,CAAG,aAAjB,wBACI,2CADJ,cAEI,mCACI,sCAAkB,CAAC,CAAEF,UAAU,CAACiB,IAAX,CAAgBC,IAAjB,CAAuB,MAAxB,EAAkC,CAAlC,CAAoC,CAApC,CAAwC,EAAzC,EAA6CC,OAA7C,CAAqD,CAArD,CAAlB,UADJ,cAEI,mCAAenB,UAAU,CAACiB,IAAX,CAAgBG,QAA/B,QAFJ,cAGI,sCAAkBpB,UAAU,CAACqB,OAAX,CAAmB,CAAnB,EAAsBC,WAAxC,GAHJ,cAII,0CAAsBtB,UAAU,CAACqB,OAAX,CAAmB,CAAnB,EAAsBJ,IAA5C,GAJJ,GAFJ,GADJ,CAeH,CACD,cAAelB,CAAAA,aAAf","sourcesContent":["\nimport React, { useState, useEffect } from 'react';\nimport '../App.css';\nconst apiKey = process.env.REACT_APP_WEATHER_KEY;\n\n// import GraphManager from './features/graphManager'\n\n\n\n\nfunction WeatherUpdate() {\n    //usestate of weather data, can be an array\n    //useState of soil Moisture data, can also be an array\n\n    const [weatherAPI, setWeatherAPI] = useState([]); //will contain backend sensor data.\n\n    /* form of \n        [temp : 25,\n\t\thumidity : 88,\n\t\tpressure : 101325,\n\t\tdescription : 'sun',\n        weathercode : 200\n        sM : 100\n        VBat: 69]\n        \n        add picture functionality.\n    */\n    const [loading, setLoading] = useState(true); //only display page once data is loaded\n    const [err, setError] = useState(null); // handle errors\n    useEffect(() => { //render website when mounted\n\n        const fetchData = async () => { //used callback hell because await was throwing issues\n\n            fetch(`http://api.openweathermap.org/data/2.5/weather?id=4151824&appid=${apiKey}`).then(re => {\n                if (re.ok) {\n                    return re.json()\n                }\n                throw re\n            }).then(data => {\n                setWeatherAPI(data)\n                console.log(data)\n\n            }).catch(err => {\n                console.log(err)\n                //setError(err)\n            }).finally(() => {\n                console.log(weatherAPI);\n                setLoading(false);\n\n            })\n\n\n        }\n       \n        fetchData()\n\n\n    }, []) \n\n    \n    if (err) return \"error\";\n    if (loading) return \"loading\";\n\n    return (\n        <div className = \"WeatherData\">\n            <h2>Weather in the Coop</h2>\n            <ul>\n                <li>Temperature: {(((weatherAPI.main.temp)-273.15) * 9/5 + 32).toFixed(2)}Â°</li>\n                <li>Humidity: {weatherAPI.main.humidity}% </li>\n                <li>Description: {weatherAPI.weather[0].description}</li>\n                <li>Some Extra Desc: {weatherAPI.weather[0].main}</li>\n            </ul>\n            \n        \n        </div>\n\n    );\n\n}\nexport default WeatherUpdate;\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}