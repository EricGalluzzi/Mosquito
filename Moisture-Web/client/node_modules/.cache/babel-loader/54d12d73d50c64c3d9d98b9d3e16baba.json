{"ast":null,"code":"var _jsxFileName = \"/Users/ericg/Desktop/SNHS/Mosquito/Moisture-Web/client/src/Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport 'react-bootstrap';\nimport Nav from './features/navBar';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport { Line } from 'react-chartjs-2';\nimport Chart from 'chart.js/auto';\nimport LineChart from './LineChart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cooperCityWeatherId = 4151824;\nconst apiKey = process.env.REACT_APP_WEATHER_KEY;\nconst WeatherApiUrl = `http://api.openweathermap.org/data/2.5/weather?id=${cooperCityWeatherId}&appid=${apiKey}`;\n\nfunction Home() {\n  _s();\n\n  //usestate of weather data, can be an array\n  //useState of soil Moisture data, can also be an array\n  const [weatherData, setWeatherData] = useState({\n    main: '',\n    weather: [],\n    temp: []\n  });\n  const [soilMoisture, setSoilMoisture] = useState({\n    soilMoisture: ''\n  }); //const [chartData, setChartData] = useState({})\n  //API data with a promise resolve nad useEffect\n\n  useEffect(() => {//     const fetchData = () =>{\n    //         Promise.all([\n    //             fetch(WeatherApiUrl).then((resp)=> resp.json()).then(weather => setWeatherData({main : weather.main, weather : weather.weather, temp: [...weatherData.temp, weather.main.temp]}))\n    //             //fetch('/api').then(resp => resp.json()).then(moisture => setSoilMoisture(moisture)),\n    //         ])\n    //     }\n    //    fetchData()\n    //    console.log(weatherData.weather[0].description)\n    //    setChartData({\n    //     labels: ['pog'],\n    //   datasets: [\n    //     {\n    //       label: \"Soil Moisture\",\n    //       data: [69],\n    //       backgroundColor: [\"rgba(75, 192, 192, 0.6)\"],\n    //       borderWidth: 4\n    //     }\n    //   ]\n    // });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Home\",\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(LineChart, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Home, \"So8z8eMqcEp5hk15xuYUNIDY08I=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/ericg/Desktop/SNHS/Mosquito/Moisture-Web/client/src/Home.js"],"names":["React","useState","useEffect","Link","Nav","Line","Chart","LineChart","cooperCityWeatherId","apiKey","process","env","REACT_APP_WEATHER_KEY","WeatherApiUrl","Home","weatherData","setWeatherData","main","weather","temp","soilMoisture","setSoilMoisture"],"mappings":";;;AACA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAO,iBAAP;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAO,sDAAP;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAMA,MAAMC,mBAAmB,GAAG,OAA5B;AACA,MAAMC,MAAM,GAAGC,OAAO,CAACC,GAAR,CAAYC,qBAA3B;AAMA,MAAMC,aAAa,GAAI,qDAAoDL,mBAAoB,UAASC,MAAO,EAA/G;;AAEA,SAASK,IAAT,GAAe;AAAA;;AACX;AACA;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCf,QAAQ,CAAC;AAACgB,IAAAA,IAAI,EAAE,EAAP;AAAWC,IAAAA,OAAO,EAAG,EAArB;AAAyBC,IAAAA,IAAI,EAAE;AAA/B,GAAD,CAA9C;AACA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCpB,QAAQ,CAAC;AAACmB,IAAAA,YAAY,EAAE;AAAf,GAAD,CAAhD,CAJW,CAKX;AAGA;;AACAlB,EAAAA,SAAS,CAAC,MAAM,CAChB;AAEA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKC,GA5BQ,EA4BP,EA5BO,CAAT;AA+BA,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACI,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,6BACC,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH;;GAxDQY,I;;KAAAA,I;AAyDT,eAAeA,IAAf","sourcesContent":["\nimport React, {useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport 'react-bootstrap';\nimport Nav from './features/navBar' ;\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport { Line } from 'react-chartjs-2';\nimport Chart from 'chart.js/auto'\nimport LineChart from './LineChart'\n\n\n\n\n\nconst cooperCityWeatherId = 4151824;\nconst apiKey = process.env.REACT_APP_WEATHER_KEY;\n\n\n\n\n\nconst WeatherApiUrl = `http://api.openweathermap.org/data/2.5/weather?id=${cooperCityWeatherId}&appid=${apiKey}`\n\nfunction Home(){\n    //usestate of weather data, can be an array\n    //useState of soil Moisture data, can also be an array\n    const [weatherData, setWeatherData] = useState({main: '', weather : [], temp: []});\n    const [soilMoisture, setSoilMoisture] = useState({soilMoisture: ''});\n    //const [chartData, setChartData] = useState({})\n\n    \n    //API data with a promise resolve nad useEffect\n    useEffect(() => {\n    //     const fetchData = () =>{\n            \n    //         Promise.all([\n    //             fetch(WeatherApiUrl).then((resp)=> resp.json()).then(weather => setWeatherData({main : weather.main, weather : weather.weather, temp: [...weatherData.temp, weather.main.temp]}))\n    //             //fetch('/api').then(resp => resp.json()).then(moisture => setSoilMoisture(moisture)),\n    //         ])\n        \n    //     }\n        \n        \n    //    fetchData()\n    //    console.log(weatherData.weather[0].description)\n    //    setChartData({\n    //     labels: ['pog'],\n    //   datasets: [\n    //     {\n    //       label: \"Soil Moisture\",\n    //       data: [69],\n    //       backgroundColor: [\"rgba(75, 192, 192, 0.6)\"],\n    //       borderWidth: 4\n    //     }\n    //   ]\n    // });\n       \n       \n    \n       \n    },[])\n    \n\n    return(\n        <div className=\"Home\">\n            <Nav />\n            <div>\n             <LineChart />   \n            \n            </div>\n        </div>\n\n        \n        \n    );\n\n\n\n\n}\nexport default Home;\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}