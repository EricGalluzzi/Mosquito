{"ast":null,"code":"var _jsxFileName = \"/Users/ericg/Desktop/SNHS/Mosquito/Moisture-Web/client/src/testFeatures/WeatherUpdate.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiKey = process.env.REACT_APP_WEATHER_KEY; // import GraphManager from './features/graphManager'\n\nfunction WeatherUpdate() {\n  _s();\n\n  //usestate of weather data, can be an array\n  //useState of soil Moisture data, can also be an array\n  const [weatherAPI, setWeatherAPI] = useState([]); //will contain backend sensor data.\n\n  /* form of \n      [temp : 25,\n  humidity : 88,\n  pressure : 101325,\n  description : 'sun',\n      weathercode : 200\n      sM : 100\n      VBat: 69]\n      \n      add picture functionality.\n  */\n\n  const [loading, setLoading] = useState(true); //only display page once data is loaded\n\n  const [err, setError] = useState(null); // handle errors\n\n  useEffect(() => {\n    //render website when mounted\n    const fetchData = async () => {\n      //used callback hell because await was throwing issues\n      fetch(`http://api.openweathermap.org/data/2.5/weather?id=4151824&appid=${apiKey}`).then(re => {\n        if (re.ok) {\n          return re.json();\n        }\n\n        throw re;\n      }).then(data => {\n        setWeatherAPI(data);\n        console.log(data);\n      }).catch(err => {\n        console.log(err); //setError(err)\n      }).finally(() => {\n        console.log(weatherAPI);\n        setLoading(false);\n      });\n    };\n\n    fetchData();\n  }, []);\n  if (err) return \"error\";\n  if (loading) return \"loading\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sub chart-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Weather in the Coop\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Temperature: \", (weatherAPI.main.temp - 273.15) * 9 / 5 + 32]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Humidity: \", weatherAPI.main.humidity, \"% \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Description: \", weatherAPI.weather[0].description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Some Extra Desc: \", weatherAPI.weather[0].main]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n}\n\n_s(WeatherUpdate, \"2chBgB2XpvUlzGfMHuOJlXHm2Ws=\");\n\n_c = WeatherUpdate;\nexport default WeatherUpdate;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherUpdate\");","map":{"version":3,"sources":["/Users/ericg/Desktop/SNHS/Mosquito/Moisture-Web/client/src/testFeatures/WeatherUpdate.js"],"names":["React","useState","useEffect","apiKey","process","env","REACT_APP_WEATHER_KEY","WeatherUpdate","weatherAPI","setWeatherAPI","loading","setLoading","err","setError","fetchData","fetch","then","re","ok","json","data","console","log","catch","finally","main","temp","humidity","weather","description"],"mappings":";;;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,YAAP;;AACA,MAAMC,MAAM,GAAGC,OAAO,CAACC,GAAR,CAAYC,qBAA3B,C,CAEA;;AAKA,SAASC,aAAT,GAAyB;AAAA;;AACrB;AACA;AAEA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,EAAD,CAA5C,CAJqB,CAI6B;;AAElD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACI,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,IAAD,CAAtC,CAjBqB,CAiByB;;AAC9C,QAAM,CAACW,GAAD,EAAMC,QAAN,IAAkBZ,QAAQ,CAAC,IAAD,CAAhC,CAlBqB,CAkBmB;;AACxCC,EAAAA,SAAS,CAAC,MAAM;AAAE;AAEd,UAAMY,SAAS,GAAG,YAAY;AAAE;AAE5BC,MAAAA,KAAK,CAAE,mEAAkEZ,MAAO,EAA3E,CAAL,CAAmFa,IAAnF,CAAwFC,EAAE,IAAI;AAC1F,YAAIA,EAAE,CAACC,EAAP,EAAW;AACP,iBAAOD,EAAE,CAACE,IAAH,EAAP;AACH;;AACD,cAAMF,EAAN;AACH,OALD,EAKGD,IALH,CAKQI,IAAI,IAAI;AACZX,QAAAA,aAAa,CAACW,IAAD,CAAb;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AAEH,OATD,EASGG,KATH,CASSX,GAAG,IAAI;AACZS,QAAAA,OAAO,CAACC,GAAR,CAAYV,GAAZ,EADY,CAEZ;AACH,OAZD,EAYGY,OAZH,CAYW,MAAM;AACbH,QAAAA,OAAO,CAACC,GAAR,CAAYd,UAAZ;AACAG,QAAAA,UAAU,CAAC,KAAD,CAAV;AAEH,OAhBD;AAmBH,KArBD;;AAuBAG,IAAAA,SAAS;AAGZ,GA5BQ,EA4BN,EA5BM,CAAT;AA+BA,MAAIF,GAAJ,EAAS,OAAO,OAAP;AACT,MAAIF,OAAJ,EAAa,OAAO,SAAP;AAEb,sBACI;AAAK,IAAA,SAAS,EAAG,mBAAjB;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,8BACI;AAAA,oCAAkB,CAAEF,UAAU,CAACiB,IAAX,CAAgBC,IAAjB,GAAuB,MAAxB,IAAkC,CAAlC,GAAoC,CAApC,GAAwC,EAA1D;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,iCAAelB,UAAU,CAACiB,IAAX,CAAgBE,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA,oCAAkBnB,UAAU,CAACoB,OAAX,CAAmB,CAAnB,EAAsBC,WAAxC;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAA,wCAAsBrB,UAAU,CAACoB,OAAX,CAAmB,CAAnB,EAAsBH,IAA5C;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH;;GApEQlB,a;;KAAAA,a;AAqET,eAAeA,aAAf","sourcesContent":["\nimport React, { useState, useEffect } from 'react';\nimport '../App.css';\nconst apiKey = process.env.REACT_APP_WEATHER_KEY;\n\n// import GraphManager from './features/graphManager'\n\n\n\n\nfunction WeatherUpdate() {\n    //usestate of weather data, can be an array\n    //useState of soil Moisture data, can also be an array\n\n    const [weatherAPI, setWeatherAPI] = useState([]); //will contain backend sensor data.\n\n    /* form of \n        [temp : 25,\n\t\thumidity : 88,\n\t\tpressure : 101325,\n\t\tdescription : 'sun',\n        weathercode : 200\n        sM : 100\n        VBat: 69]\n        \n        add picture functionality.\n    */\n    const [loading, setLoading] = useState(true); //only display page once data is loaded\n    const [err, setError] = useState(null); // handle errors\n    useEffect(() => { //render website when mounted\n\n        const fetchData = async () => { //used callback hell because await was throwing issues\n\n            fetch(`http://api.openweathermap.org/data/2.5/weather?id=4151824&appid=${apiKey}`).then(re => {\n                if (re.ok) {\n                    return re.json()\n                }\n                throw re\n            }).then(data => {\n                setWeatherAPI(data)\n                console.log(data)\n\n            }).catch(err => {\n                console.log(err)\n                //setError(err)\n            }).finally(() => {\n                console.log(weatherAPI);\n                setLoading(false);\n\n            })\n\n\n        }\n       \n        fetchData()\n\n\n    }, []) \n\n    \n    if (err) return \"error\";\n    if (loading) return \"loading\";\n\n    return (\n        <div className = \"sub chart-wrapper\">\n            <h1>Weather in the Coop</h1>\n            <ul>\n                <li>Temperature: {((weatherAPI.main.temp)-273.15) * 9/5 + 32}</li>\n                <li>Humidity: {weatherAPI.main.humidity}% </li>\n                <li>Description: {weatherAPI.weather[0].description}</li>\n                <li>Some Extra Desc: {weatherAPI.weather[0].main}</li>\n            </ul>\n            \n        \n        </div>\n\n    );\n\n}\nexport default WeatherUpdate;\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}