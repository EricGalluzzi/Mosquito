{"ast":null,"code":"var _jsxFileName = \"/Users/ericg/Desktop/SNHS/Mosquito/Moisture-Web/client/src/Home.js\",\n    _s = $RefreshSig$();\n\nimport { Chart } from 'react-chartjs-2';\nimport { Chart as ChartJS, LineController, LineElement, PointElement, LinearScale, Title } from 'chart.js';\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport 'react-bootstrap';\nimport Nav from './features/navBar';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cooperCityWeatherId = 4151824;\nconst apiKey = process.env.REACT_APP_WEATHER_KEY;\nChartJS.register(LineController, LineElement, PointElement, LinearScale, Title);\nconst WeatherApiUrl = `http://api.openweathermap.org/data/2.5/weather?id=${cooperCityWeatherId}&appid=${apiKey}`;\n\nfunction Home() {\n  _s();\n\n  //usestate of weather data, can be an array\n  //useState of soil Moisture data, can also be an array\n  const [weatherData, setWeatherData] = useState({\n    main: '',\n    weather: ''\n  });\n  const [soilMoisture, setSoilMoisture] = useState({\n    soilMoisture: ''\n  });\n  const [chartData, setChartData] = useState({});\n\n  const chart = () => {\n    const labels = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\n    setChartData({\n      labels: labels,\n      datasets: [{\n        label: \"level of thiccness\",\n        data: [65, 59, 80, 81, 56, 55, 40],\n        backgroundColor: [\"rgba(75, 192, 192, 0.6)\"],\n        borderWidth: 4\n      }]\n    });\n  }; //API data with a promise resolve nad useEffect\n\n\n  useEffect(() => {\n    const fetchData = () => {\n      Promise.all([fetch(WeatherApiUrl).then(resp => resp.json()).then(weather => setWeatherData({\n        main: weather.main,\n        weather: weather.weather\n      })) //fetch('/api').then(resp => resp.json()).then(moisture => setSoilMoisture(moisture)),\n      ]);\n    };\n\n    fetchData();\n    chart();\n    return () => {\n      setWeatherData({}); // This worked for me\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Home\",\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Chart, {\n        type: \"line\",\n        data: chartData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Home, \"cR+ErvvuArUeUVEkfs2cHMkIJEY=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/ericg/Desktop/SNHS/Mosquito/Moisture-Web/client/src/Home.js"],"names":["Chart","ChartJS","LineController","LineElement","PointElement","LinearScale","Title","React","useState","useEffect","Link","Nav","cooperCityWeatherId","apiKey","process","env","REACT_APP_WEATHER_KEY","register","WeatherApiUrl","Home","weatherData","setWeatherData","main","weather","soilMoisture","setSoilMoisture","chartData","setChartData","chart","labels","datasets","label","data","backgroundColor","borderWidth","fetchData","Promise","all","fetch","then","resp","json"],"mappings":";;;AAAA,SAASA,KAAT,QAAsB,iBAAtB;AACA,SAASA,KAAK,IAAIC,OAAlB,EAA2BC,cAA3B,EAA2CC,WAA3C,EAAwDC,YAAxD,EAAsEC,WAAtE,EAAmFC,KAAnF,QAAgG,UAAhG;AACA,OAAOC,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAO,iBAAP;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAO,sDAAP;;AACA,MAAMC,mBAAmB,GAAG,OAA5B;AACA,MAAMC,MAAM,GAAGC,OAAO,CAACC,GAAR,CAAYC,qBAA3B;AAGAf,OAAO,CAACgB,QAAR,CAAiBf,cAAjB,EAAiCC,WAAjC,EAA8CC,YAA9C,EAA4DC,WAA5D,EAAyEC,KAAzE;AAIA,MAAMY,aAAa,GAAI,qDAAoDN,mBAAoB,UAASC,MAAO,EAA/G;;AAEA,SAASM,IAAT,GAAe;AAAA;;AACX;AACA;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCb,QAAQ,CAAC;AAACc,IAAAA,IAAI,EAAE,EAAP;AAAWC,IAAAA,OAAO,EAAG;AAArB,GAAD,CAA9C;AACA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCjB,QAAQ,CAAC;AAACgB,IAAAA,YAAY,EAAE;AAAf,GAAD,CAAhD;AACA,QAAM,CAACE,SAAD,EAAYC,YAAZ,IAA4BnB,QAAQ,CAAC,EAAD,CAA1C;;AAEA,QAAMoB,KAAK,GAAG,MACd;AACI,UAAMC,MAAM,GAAG,CAAC,GAAD,EAAM,GAAN,EAAU,GAAV,EAAc,GAAd,EAAkB,GAAlB,EAAsB,GAAtB,EAA0B,GAA1B,CAAf;AACAF,IAAAA,YAAY,CAAC;AACbE,MAAAA,MAAM,EAAEA,MADK;AAEbC,MAAAA,QAAQ,EAAE,CACR;AACEC,QAAAA,KAAK,EAAE,oBADT;AAEEC,QAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,EAAyB,EAAzB,CAFR;AAGEC,QAAAA,eAAe,EAAE,CAAC,yBAAD,CAHnB;AAIEC,QAAAA,WAAW,EAAE;AAJf,OADQ;AAFG,KAAD,CAAZ;AAWH,GAdD,CAPW,CAsBX;;;AACAzB,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAM0B,SAAS,GAAG,MAAK;AAEnBC,MAAAA,OAAO,CAACC,GAAR,CAAY,CACRC,KAAK,CAACpB,aAAD,CAAL,CAAqBqB,IAArB,CAA0BC,IAAI,IAAIA,IAAI,CAACC,IAAL,EAAlC,EAA+CF,IAA/C,CAAoDhB,OAAO,IAAIF,cAAc,CAAC;AAACC,QAAAA,IAAI,EAAGC,OAAO,CAACD,IAAhB;AAAsBC,QAAAA,OAAO,EAAGA,OAAO,CAACA;AAAxC,OAAD,CAA7E,CADQ,CAER;AAFQ,OAAZ;AAKH,KAPD;;AAQDY,IAAAA,SAAS;AAEVP,IAAAA,KAAK;AACJ,WAAO,MAAM;AACZP,MAAAA,cAAc,CAAC,EAAD,CAAd,CADY,CACQ;AACrB,KAFA;AAIF,GAhBQ,EAgBP,EAhBO,CAAT;AAmBA,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACI,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,6BACA,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAEK;AAAzB;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH;;GAzDQP,I;;KAAAA,I;AA0DT,eAAeA,IAAf","sourcesContent":["import { Chart } from 'react-chartjs-2';\nimport { Chart as ChartJS, LineController, LineElement, PointElement, LinearScale, Title } from 'chart.js';\nimport React, {useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport 'react-bootstrap';\nimport Nav from './features/navBar' ;\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nconst cooperCityWeatherId = 4151824;\nconst apiKey = process.env.REACT_APP_WEATHER_KEY;\n\n\nChartJS.register(LineController, LineElement, PointElement, LinearScale, Title);\n\n\n\nconst WeatherApiUrl = `http://api.openweathermap.org/data/2.5/weather?id=${cooperCityWeatherId}&appid=${apiKey}`\n\nfunction Home(){\n    //usestate of weather data, can be an array\n    //useState of soil Moisture data, can also be an array\n    const [weatherData, setWeatherData] = useState({main: '', weather : ''});\n    const [soilMoisture, setSoilMoisture] = useState({soilMoisture: ''});\n    const [chartData, setChartData] = useState({});\n\n    const chart = () => \n    {\n        const labels = ['a', 'b','c','d','e','f','g'];\n        setChartData({\n        labels: labels,\n        datasets: [\n          {\n            label: \"level of thiccness\",\n            data: [65, 59, 80, 81, 56, 55, 40],\n            backgroundColor: [\"rgba(75, 192, 192, 0.6)\"],\n            borderWidth: 4\n          }\n        ]\n      });\n    }\n    //API data with a promise resolve nad useEffect\n    useEffect(() => {\n        const fetchData = () =>{\n    \n            Promise.all([\n                fetch(WeatherApiUrl).then(resp => resp.json()).then(weather => setWeatherData({main : weather.main, weather : weather.weather})), \n                //fetch('/api').then(resp => resp.json()).then(moisture => setSoilMoisture(moisture)),\n            ])\n        \n        }\n       fetchData()\n       \n      chart();\n       return () => {\n        setWeatherData({}); // This worked for me\n      };\n       \n    },[])\n    \n\n    return(\n        <div className=\"Home\">\n            <Nav />\n            <div>\n            <Chart type='line' data={chartData} />\n            </div>\n        </div>\n\n        \n        \n    );\n\n\n\n\n}\nexport default Home;\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}