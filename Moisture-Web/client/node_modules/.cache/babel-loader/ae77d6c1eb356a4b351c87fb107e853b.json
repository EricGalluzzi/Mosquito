{"ast":null,"code":"var _jsxFileName = \"/Users/ericg/Desktop/SNHS/Mosquito/Moisture-Web/client/src/LineChart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nconst cooperCityWeatherId = 4151824;\nconst apiKey = process.env.REACT_APP_WEATHER_KEY;\nconst WeatherApiUrl = `http://api.openweathermap.org/data/2.5/weather?id=${cooperCityWeatherId}&appid=${apiKey}`;\n\nconst LineChart = () => {\n  _s();\n\n  const [chart, setChart] = useState({});\n  useEffect(() => {\n    const fetchData = async () => {\n      Promise.all([fetch(WeatherApiUrl).then(resp => resp.json()).then(weather => setChart(weather)) //fetch('/api').then(resp => resp.json()).then(moisture => setSoilMoisture(moisture)),\n      ]).catch(error => {\n        console.log(error);\n      });\n    };\n\n    fetchData();\n    console.log(chart.weather[0].description);\n  }, []);\n  console.log(\"chart\", chart); // var data = {\n  //   labels: chart.weather.map(x => x.description),\n  //   datasets: [{\n  //     label: `${chart.weather.main} Coins Available`,\n  //     data: chart.weather.map(x => x.id),\n  //     backgroundColor: [\n  //       'rgba(255, 99, 132, 0.2)',\n  //       'rgba(54, 162, 235, 0.2)',\n  //       'rgba(255, 206, 86, 0.2)',\n  //       'rgba(75, 192, 192, 0.2)',\n  //       'rgba(153, 102, 255, 0.2)',\n  //       'rgba(255, 159, 64, 0.2)'\n  //     ],\n  //     borderColor: [\n  //       'rgba(255, 99, 132, 1)',\n  //       'rgba(54, 162, 235, 1)',\n  //       'rgba(255, 206, 86, 1)',\n  //       'rgba(75, 192, 192, 1)',\n  //       'rgba(153, 102, 255, 1)',\n  //       'rgba(255, 159, 64, 1)'\n  //     ],\n  //     borderWidth: 1\n  //   }]\n  // };\n  // var options = {\n  //   maintainAspectRatio: false,\n  //   scales: {\n  //   },\n  //   legend: {\n  //     labels: {\n  //       fontSize: 25,\n  //     },\n  //   },\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 7\n  }, this);\n};\n\n_s(LineChart, \"ip4zykqV5S/78tH8IJvHUJRfpBU=\");\n\n_c = LineChart;\nexport default LineChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"sources":["/Users/ericg/Desktop/SNHS/Mosquito/Moisture-Web/client/src/LineChart.js"],"names":["React","useState","useEffect","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","Line","register","cooperCityWeatherId","apiKey","process","env","REACT_APP_WEATHER_KEY","WeatherApiUrl","LineChart","chart","setChart","fetchData","Promise","all","fetch","then","resp","json","weather","catch","error","console","log","description"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SACEC,KAAK,IAAIC,OADX,EAEEC,aAFF,EAGEC,WAHF,EAIEC,YAJF,EAKEC,WALF,EAMEC,KANF,EAOEC,OAPF,EAQEC,MARF,QASO,UATP;AAWA,SAASC,IAAT,QAAqB,iBAArB;;AAEAR,OAAO,CAACS,QAAR,CACER,aADF,EAEEC,WAFF,EAGEC,YAHF,EAIEC,WAJF,EAKEC,KALF,EAMEC,OANF,EAOEC,MAPF;AASA,MAAMG,mBAAmB,GAAG,OAA5B;AACA,MAAMC,MAAM,GAAGC,OAAO,CAACC,GAAR,CAAYC,qBAA3B;AAMA,MAAMC,aAAa,GAAI,qDAAoDL,mBAAoB,UAASC,MAAO,EAA/G;;AAEA,MAAMK,SAAS,GAAG,MAAM;AAAA;;AACpB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBrB,QAAQ,CAAC,EAAD,CAAlC;AAIAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMqB,SAAS,GAAG,YAAW;AAEzBC,MAAAA,OAAO,CAACC,GAAR,CAAY,CACVC,KAAK,CAACP,aAAD,CAAL,CAAqBQ,IAArB,CAA2BC,IAAD,IAASA,IAAI,CAACC,IAAL,EAAnC,EAAgDF,IAAhD,CAAqDG,OAAO,IAAIR,QAAQ,CAACQ,OAAD,CAAxE,CADU,CAER;AAFQ,OAAZ,EAGGC,KAHH,CAGUC,KAAD,IAAW;AAChBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,OALH;AAMC,KARL;;AASAT,IAAAA,SAAS;AACTU,IAAAA,OAAO,CAACC,GAAR,CAAYb,KAAK,CAACS,OAAN,CAAc,CAAd,EAAiBK,WAA7B;AAGC,GAdI,EAcF,EAdE,CAAT;AAoBAF,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBb,KAArB,EAzBoB,CA0BpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACE;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAxEH;;GAAMD,S;;KAAAA,S;AA0EJ,eAAeA,SAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\n\nimport { Line } from 'react-chartjs-2';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n);\nconst cooperCityWeatherId = 4151824;\nconst apiKey = process.env.REACT_APP_WEATHER_KEY;\n\n\n\n\n\nconst WeatherApiUrl = `http://api.openweathermap.org/data/2.5/weather?id=${cooperCityWeatherId}&appid=${apiKey}`\n\nconst LineChart = () => {\n    const [chart, setChart] = useState({})\n  \n  \n  \n    useEffect(() => {\n        const fetchData = async () =>{\n            \n            Promise.all([\n              fetch(WeatherApiUrl).then((resp)=> resp.json()).then(weather => setChart(weather))\n                //fetch('/api').then(resp => resp.json()).then(moisture => setSoilMoisture(moisture)),\n            ]).catch((error) => {\n                console.log(error);\n              });\n            }\n        fetchData()\n        console.log(chart.weather[0].description)\n\n\n        }, []);\n      \n        \n          \n      \n  \n    console.log(\"chart\", chart);\n    // var data = {\n    //   labels: chart.weather.map(x => x.description),\n    //   datasets: [{\n    //     label: `${chart.weather.main} Coins Available`,\n    //     data: chart.weather.map(x => x.id),\n    //     backgroundColor: [\n    //       'rgba(255, 99, 132, 0.2)',\n    //       'rgba(54, 162, 235, 0.2)',\n    //       'rgba(255, 206, 86, 0.2)',\n    //       'rgba(75, 192, 192, 0.2)',\n    //       'rgba(153, 102, 255, 0.2)',\n    //       'rgba(255, 159, 64, 0.2)'\n    //     ],\n    //     borderColor: [\n    //       'rgba(255, 99, 132, 1)',\n    //       'rgba(54, 162, 235, 1)',\n    //       'rgba(255, 206, 86, 1)',\n    //       'rgba(75, 192, 192, 1)',\n    //       'rgba(153, 102, 255, 1)',\n    //       'rgba(255, 159, 64, 1)'\n    //     ],\n    //     borderWidth: 1\n    //   }]\n    // };\n  \n    // var options = {\n    //   maintainAspectRatio: false,\n    //   scales: {\n    //   },\n    //   legend: {\n    //     labels: {\n    //       fontSize: 25,\n    //     },\n    //   },\n    // }\n  \n    return (\n      <div>\n        {/* <Line\n          data={data}\n          height={400}\n          options={options}\n  \n        /> */}\n      </div>\n    )\n  }\n  \n  export default LineChart"]},"metadata":{},"sourceType":"module"}