{"ast":null,"code":"import _asyncToGenerator from\"/Users/ericg/Desktop/SNHS/Mosquito/Moisture-Web/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/ericg/Desktop/SNHS/Mosquito/Moisture-Web/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/Users/ericg/Desktop/SNHS/Mosquito/Moisture-Web/client/node_modules/@babel/runtime/regenerator/index.js\";import React,{useState,useEffect}from'react';import{Link}from'react-router-dom';import{ProgressBar}from'react-bootstrap';import Nav from'./features/navBar';import'../node_modules/bootstrap/dist/css/bootstrap.min.css';// import GraphManager from './features/graphManager'\nimport GraphManager from'./testFeatures/newGraphFormat';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Home(){//usestate of weather data, can be an array\n//useState of soil Moisture data, can also be an array\nvar _useState=useState([]),_useState2=_slicedToArray(_useState,2),restAPI=_useState2[0],setRestAPI=_useState2[1];//will contain backend sensor data.\n/* form of \n        [temp : 25,\n\t\thumidity : 88,\n\t\tpressure : 101325,\n\t\tdescription : 'sun',\n        weathercode : 200\n        sM : 100\n        VBat: 69]\n        \n        add picture functionality.\n    */var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),loading=_useState4[0],setLoading=_useState4[1];//only display page once data is loaded\nvar _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),err=_useState6[0],setError=_useState6[1];// handle errors\nuseEffect(function(){//render website when mounted\nvar fetchData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0://used callback hell because await was throwing issues\nfetch('http://localhost:3001/api').then(function(re){if(re.ok){return re.json();}throw re;}).then(function(data){setRestAPI(data);console.log(data);}).catch(function(err){console.log(err);//setError(err)\n}).finally(function(){setLoading(false);});case 1:case\"end\":return _context.stop();}}},_callee);}));return function fetchData(){return _ref.apply(this,arguments);};}();fetchData();},[]);if(err)return\"error\";return/*#__PURE__*/_jsxs(\"div\",{className:\"Home\",children:[/*#__PURE__*/_jsx(Nav,{}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(GraphManager,{data:restAPI})})]});}export default Home;","map":{"version":3,"sources":["/Users/ericg/Desktop/SNHS/Mosquito/Moisture-Web/client/src/Home.js"],"names":["React","useState","useEffect","Link","ProgressBar","Nav","GraphManager","Home","restAPI","setRestAPI","loading","setLoading","err","setError","fetchData","fetch","then","re","ok","json","data","console","log","catch","finally"],"mappings":"uaACA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,IAAT,KAAqB,kBAArB,CACA,OAASC,WAAT,KAA4B,iBAA5B,CAEA,MAAOC,CAAAA,GAAP,KAAgB,mBAAhB,CACA,MAAO,sDAAP,CAEA;AACA,MAAOC,CAAAA,YAAP,KAAyB,+BAAzB,C,wFAIA,QAASC,CAAAA,IAAT,EAAgB,CACZ;AACA;AAEA,cAA8BN,QAAQ,CAAC,EAAD,CAAtC,wCAAOO,OAAP,eAAgBC,UAAhB,eAA4C;AAE5C;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MACI,eAA8BR,QAAQ,CAAC,IAAD,CAAtC,yCAAOS,OAAP,eAAgBC,UAAhB,eAA8C;AAC9C,eAAwBV,QAAQ,CAAC,IAAD,CAAhC,yCAAOW,GAAP,eAAYC,QAAZ,eAAwC;AACxCX,SAAS,CAAC,UAAM,CAAE;AAEd,GAAMY,CAAAA,SAAS,0FAAG,mIAAc;AAE5BC,KAAK,CAAC,2BAAD,CAAL,CAAmCC,IAAnC,CAAwC,SAAAC,EAAE,CAAI,CAC1C,GAAIA,EAAE,CAACC,EAAP,CAAW,CACP,MAAOD,CAAAA,EAAE,CAACE,IAAH,EAAP,CACH,CACD,KAAMF,CAAAA,EAAN,CACH,CALD,EAKGD,IALH,CAKQ,SAAAI,IAAI,CAAI,CACZX,UAAU,CAACW,IAAD,CAAV,CACAC,OAAO,CAACC,GAAR,CAAYF,IAAZ,EAEH,CATD,EASGG,KATH,CASS,SAAAX,GAAG,CAAI,CACZS,OAAO,CAACC,GAAR,CAAYV,GAAZ,EACA;AACH,CAZD,EAYGY,OAZH,CAYW,UAAM,CACbb,UAAU,CAAC,KAAD,CAAV,CAEH,CAfD,EAFc,sDAAH,kBAATG,CAAAA,SAAS,0CAAf,CAsBAA,SAAS,GAGZ,CA3BQ,CA2BN,EA3BM,CAAT,CA8BA,GAAIF,GAAJ,CAAS,MAAO,OAAP,CAET,mBACI,aAAK,SAAS,CAAC,MAAf,wBACI,KAAC,GAAD,IADJ,cAEI,kCAEI,KAAC,YAAD,EAAc,IAAI,CAAEJ,OAApB,EAFJ,EAFJ,GADJ,CAWH,CACD,cAAeD,CAAAA,IAAf","sourcesContent":["\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { ProgressBar } from 'react-bootstrap';\n\nimport Nav from './features/navBar';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\n// import GraphManager from './features/graphManager'\nimport GraphManager from './testFeatures/newGraphFormat'\n\n\n\nfunction Home() {\n    //usestate of weather data, can be an array\n    //useState of soil Moisture data, can also be an array\n\n    const [restAPI, setRestAPI] = useState([]); //will contain backend sensor data.\n\n    /* form of \n        [temp : 25,\n\t\thumidity : 88,\n\t\tpressure : 101325,\n\t\tdescription : 'sun',\n        weathercode : 200\n        sM : 100\n        VBat: 69]\n        \n        add picture functionality.\n    */\n    const [loading, setLoading] = useState(true); //only display page once data is loaded\n    const [err, setError] = useState(null); // handle errors\n    useEffect(() => { //render website when mounted\n\n        const fetchData = async () => { //used callback hell because await was throwing issues\n\n            fetch('http://localhost:3001/api').then(re => {\n                if (re.ok) {\n                    return re.json()\n                }\n                throw re\n            }).then(data => {\n                setRestAPI(data)\n                console.log(data)\n\n            }).catch(err => {\n                console.log(err)\n                //setError(err)\n            }).finally(() => {\n                setLoading(false);\n\n            })\n\n\n        }\n       \n        fetchData()\n\n\n    }, []) \n\n    \n    if (err) return \"error\";\n\n    return (\n        <div className=\"Home\">\n            <Nav />\n            <div>\n            \n                <GraphManager data={restAPI} />\n            </div>\n        </div>\n\n    );\n\n}\nexport default Home;\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}