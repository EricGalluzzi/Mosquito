{"ast":null,"code":"import _asyncToGenerator from\"/Users/ericg/Desktop/SNHS/Mosquito/Moisture-Web/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/ericg/Desktop/SNHS/Mosquito/Moisture-Web/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/Users/ericg/Desktop/SNHS/Mosquito/Moisture-Web/client/node_modules/@babel/runtime/regenerator/index.js\";import React,{useState,useEffect}from'react';import'../App.css';// import GraphManager from './features/graphManager'\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Alert(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),alert=_useState2[0],setAlert=_useState2[1];//will contain what is returned from alert- can be an array or string?\nvar _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),loading=_useState4[0],setLoading=_useState4[1];//only display page once data is loaded\nvar _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),err=_useState6[0],setError=_useState6[1];// handle errors\nuseEffect(function(){//render website when mounted\nvar fetchData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0://used callback hell because await was throwing issues\nfetch(\"/alert\").then(function(re){if(re.ok){return re.json();}throw re;}).then(function(data){setAlert(data);console.log(data);}).catch(function(err){console.log(err);//setError(err)\n}).finally(function(){setLoading(false);});case 1:case\"end\":return _context.stop();}}},_callee);}));return function fetchData(){return _ref.apply(this,arguments);};}();fetchData();},[]);if(err)return\"error\";if(loading)return\"loading\";return/*#__PURE__*/_jsxs(\"div\",{className:\"AlertData\",children:[/*#__PURE__*/_jsx(\"h1\",{style:{color:'red'},children:\"Alerts by Sensor: (GeoTagging soon...)\"}),/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"SensorID\"}),\"\\xA0\",/*#__PURE__*/_jsx(\"th\",{children:\"Risk Level Detected\"})]}),alert.map(function(x){var color;switch(x.risk){case 0:color='green';break;case 1:color='orange';break;case 2:color='red';break;}return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:x.sensorID}),\"\\xA0\",/*#__PURE__*/_jsxs(\"td\",{style:{color:color},children:[\" \",x.info]})]},x.sensorID)// <p style = {{color: color}}>{x.sensorID}: {x.info}</p>\n;})]})]});}export default Alert;","map":{"version":3,"sources":["/Users/ericg/Desktop/SNHS/Mosquito/Moisture-Web/client/src/testFeatures/Alert.js"],"names":["React","useState","useEffect","Alert","alert","setAlert","loading","setLoading","err","setError","fetchData","fetch","then","re","ok","json","data","console","log","catch","finally","color","map","x","risk","sensorID","info"],"mappings":"uaACA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAO,YAAP,CAMA;wFAKA,QAASC,CAAAA,KAAT,EAAiB,CAEb,cAA0BF,QAAQ,CAAC,EAAD,CAAlC,wCAAOG,KAAP,eAAcC,QAAd,eAAwC;AAExC,eAA8BJ,QAAQ,CAAC,IAAD,CAAtC,yCAAOK,OAAP,eAAgBC,UAAhB,eAA8C;AAC9C,eAAwBN,QAAQ,CAAC,IAAD,CAAhC,yCAAOO,GAAP,eAAYC,QAAZ,eAAwC;AACxCP,SAAS,CAAC,UAAM,CAAE;AAEd,GAAMQ,CAAAA,SAAS,0FAAG,mIAAc;AAE5BC,KAAK,UAAL,CAAgBC,IAAhB,CAAqB,SAAAC,EAAE,CAAI,CACvB,GAAIA,EAAE,CAACC,EAAP,CAAW,CACP,MAAOD,CAAAA,EAAE,CAACE,IAAH,EAAP,CACH,CACD,KAAMF,CAAAA,EAAN,CACH,CALD,EAKGD,IALH,CAKQ,SAAAI,IAAI,CAAI,CACZX,QAAQ,CAACW,IAAD,CAAR,CACAC,OAAO,CAACC,GAAR,CAAYF,IAAZ,EAEH,CATD,EASGG,KATH,CASS,SAAAX,GAAG,CAAI,CACZS,OAAO,CAACC,GAAR,CAAYV,GAAZ,EACA;AACH,CAZD,EAYGY,OAZH,CAYW,UAAM,CACbb,UAAU,CAAC,KAAD,CAAV,CAEH,CAfD,EAFc,sDAAH,kBAATG,CAAAA,SAAS,0CAAf,CAsBAA,SAAS,GAGZ,CA3BQ,CA2BN,EA3BM,CAAT,CA8BA,GAAIF,GAAJ,CAAS,MAAO,OAAP,CACT,GAAIF,OAAJ,CAAa,MAAO,SAAP,CAEb,mBACI,aAAK,SAAS,CAAG,WAAjB,wBACI,WAAI,KAAK,CAAI,CAACe,KAAK,CAAE,KAAR,CAAb,oDADJ,cAEQ,sCACA,mCACI,gCADJ,qBAEI,2CAFJ,GADA,CAKCjB,KAAK,CAACkB,GAAN,CAAU,SAAAC,CAAC,CAAG,CACZ,GAAIF,CAAAA,KAAJ,CACA,OAAOE,CAAC,CAACC,IAAT,EACC,IAAK,EAAL,CAAQH,KAAK,CAAG,OAAR,CAAiB,MACzB,IAAK,EAAL,CAAQA,KAAK,CAAG,QAAR,CAAiB,MACzB,IAAK,EAAL,CAAQA,KAAK,CAAG,KAAR,CAAe,MAHxB,CAKA,mBACC,mCACI,oBAAKE,CAAC,CAACE,QAAP,EADJ,qBAEI,YAAI,KAAK,CAAI,CAACJ,KAAK,CAAEA,KAAR,CAAb,eAA+BE,CAAC,CAACG,IAAjC,GAFJ,GAAWH,CAAC,CAACE,QAAb,CAIA;AALD,CAQN,CAfI,CALD,GAFR,GADJ,CA8BH,CACD,cAAetB,CAAAA,KAAf","sourcesContent":["\nimport React, { useState, useEffect } from 'react';\nimport '../App.css';\n\n\n\n\n\n// import GraphManager from './features/graphManager'\n\n\n\n\nfunction Alert() {\n \n    const [alert, setAlert] = useState([]); //will contain what is returned from alert- can be an array or string?\n\n    const [loading, setLoading] = useState(true); //only display page once data is loaded\n    const [err, setError] = useState(null); // handle errors\n    useEffect(() => { //render website when mounted\n\n        const fetchData = async () => { //used callback hell because await was throwing issues\n\n            fetch(`/alert`).then(re => {\n                if (re.ok) {\n                    return re.json()\n                }\n                throw re\n            }).then(data => {\n                setAlert(data)\n                console.log(data)\n\n            }).catch(err => {\n                console.log(err)\n                //setError(err)\n            }).finally(() => {\n                setLoading(false);\n\n            })\n\n\n        }\n       \n        fetchData()\n\n\n    }, []) \n\n    \n    if (err) return \"error\";\n    if (loading) return \"loading\";\n\n    return (\n        <div className = \"AlertData\">\n            <h1 style = {{color: 'red'}}>Alerts by Sensor: (GeoTagging soon...)</h1>\n                <table>\n                <tr>\n                    <th>SensorID</th>&nbsp;\n                    <th>Risk Level Detected</th>\n                </tr>\n                {alert.map(x=> {\n                   let color;\n                   switch(x.risk){\n                    case 0: color = 'green'; break;\n                    case 1: color = 'orange';break;\n                    case 2: color = 'red'; break;\n                   }\n                   return  (\n                    <tr key = {x.sensorID}>\n                        <td>{x.sensorID}</td>&nbsp;\n                        <td style = {{color: color}}> {x.info}</td>\n                    </tr>\n                    // <p style = {{color: color}}>{x.sensorID}: {x.info}</p>\n                    \n                )\n            })\n        }\n        </table>\n                \n\n        </div>)\n\n}\nexport default Alert;\n"]},"metadata":{},"sourceType":"module"}