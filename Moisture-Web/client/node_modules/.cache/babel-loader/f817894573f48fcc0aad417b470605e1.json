{"ast":null,"code":"import _slicedToArray from\"/Users/ericg/Desktop/SNHS/Mosquito/Moisture-Web/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from'react';import{Chart as ChartJS,CategoryScale,LinearScale,PointElement,LineElement,Title,Tooltip,Legend,BarController,BarElement}from'chart.js';import{ProgressBar}from'react-bootstrap';import{Line,Bar}from'react-chartjs-2';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";ChartJS.register(CategoryScale,LinearScale,PointElement,LineElement,Title,Tooltip,Legend,BarController,BarElement);var GraphManager=function GraphManager(chart){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),vBat=_useState2[0],setVBat=_useState2[1];//format, array of object ID and vBat\nvar _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),dataSet=_useState4[0],setDataSet=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),bigArray=_useState6[0],setBigArray=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),bigArrayLoaded=_useState8[0],setBigArrayLoaded=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),isLoaded=_useState10[0],setLoaded=_useState10[1];//duplicate testing for dev\nuseEffect(function(){if(chart.data.length>0){if(!isLoaded){initializeBigArray();createDataSets();vBatDisplay();setLoaded(true);}}//createDataSets()\n},[chart]);var initializeBigArray=function initializeBigArray(){var copy=bigArray;chart.data.map(function(x){x.entry.map(function(y){var exists=findIfIdExists(y.sensorID,copy);if(exists===-1){copy.push([y]);}else{// var valueArr = copy[exists].map((item)=> item.expirationSet );\n// if(!valueArr.some((item, idx)=> item == y.expirationSet )) \ncopy[exists].push(y);//delete duplicates because initializeBigArray is called twice\n}});});setBigArray(copy);setBigArrayLoaded(true);// if this causes a remound we need a way to stop duplicates. \n};var findIfIdExists=function findIfIdExists(y,copy){for(var i=0;i<copy.length;i++){var exists=copy[i][0].sensorID;//look into first element only\nif(exists!=undefined)return i;}return-1;};//essentially just map a dataset. \nvar createDataSets=function createDataSets(){setDataSet(bigArray.map(function(x,i){return{label:typeof x[0].sensorID==='undefined'?'No Sensor ID':x[0].sensorID,data:x.map(function(x){return x.sM;}),//might not need\nborderWidth:1,fill:false,borderColor:'red'};}));};var vBatDisplay=function vBatDisplay(){setVBat(bigArray.map(function(x){return{\"sensorID\":typeof x[0].sensorID==='undefined'?'No Sensor ID':x[0].sensorID,\"vBat\":x[x.length-1].vBat//see if this value is anything\n};}));};var moistureData={labels:chart===null||chart===void 0?void 0:chart.map(function(x){return x.expirationSet;}),//fix for legend lengths\ndatasets:dataSet};var options={maintainAspectRatio:false,plugins:{title:{display:true,text:'Soil Moisture Data'}},scales:{},legend:{labels:{fontSize:25}}};var displayVBat={labels:vBat.map(function(x){return x.sensorID;}),datasets:[{label:'Battery Voltage',borderColor:'red',borderWidth:2,data:vBat.map(function(x){return x.vBat;})}]};console.log(vBat);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"div\",{className:\"moistureGraph\",children:/*#__PURE__*/_jsx(Line,{data:moistureData,height:400,options:options})}),/*#__PURE__*/_jsx(\"div\",{className:\"voltageGraph\",children:/*#__PURE__*/_jsx(Bar,{data:displayVBat,height:400,options:options})})]});};export default GraphManager4;","map":{"version":3,"sources":["/Users/ericg/Desktop/SNHS/Mosquito/Moisture-Web/client/src/features/graphManager.js"],"names":["React","useState","useEffect","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","BarController","BarElement","ProgressBar","Line","Bar","register","GraphManager","chart","vBat","setVBat","dataSet","setDataSet","bigArray","setBigArray","bigArrayLoaded","setBigArrayLoaded","isLoaded","setLoaded","data","length","initializeBigArray","createDataSets","vBatDisplay","copy","map","x","entry","y","exists","findIfIdExists","sensorID","push","i","undefined","label","sM","borderWidth","fill","borderColor","moistureData","labels","expirationSet","datasets","options","maintainAspectRatio","plugins","title","display","text","scales","legend","fontSize","displayVBat","console","log","GraphManager4"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  BarController,\n  BarElement,\n} from 'chart.js';\nimport { ProgressBar } from 'react-bootstrap';\nimport { Line, Bar } from 'react-chartjs-2';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  BarController,\n  BarElement\n);\n\n\nconst GraphManager = (chart) => {\n  let [vBat, setVBat] = useState([]); //format, array of object ID and vBat\n  let [dataSet, setDataSet] = useState([]);\n  let [bigArray, setBigArray] = useState([]);\n  let [bigArrayLoaded, setBigArrayLoaded] = useState(false);\n  let [isLoaded, setLoaded] = useState(false); //duplicate testing for dev\n\n  useEffect(() => {\n\n\n    if (chart.data.length > 0) {\n      if (!isLoaded) {\n\n        initializeBigArray();\n        createDataSets();\n        vBatDisplay();\n        setLoaded(true);\n\n      }\n    }\n\n    //createDataSets()\n\n  }, [chart])\n\n\n  const initializeBigArray = () => {\n\n    let copy = bigArray;\n\n    chart.data.map(x => {\n\n      x.entry.map(y => {\n\n        let exists = findIfIdExists(y.sensorID, copy);\n        if (exists === -1) {\n          copy.push([y]);\n        }\n        else {\n\n          // var valueArr = copy[exists].map((item)=> item.expirationSet );\n          // if(!valueArr.some((item, idx)=> item == y.expirationSet )) \n          copy[exists].push(y); //delete duplicates because initializeBigArray is called twice\n\n\n        }\n      })\n\n\n\n\n    })\n    setBigArray(copy);\n    setBigArrayLoaded(true); // if this causes a remound we need a way to stop duplicates. \n  }\n\n  const findIfIdExists = (y, copy) => {\n    for (let i = 0; i < copy.length; i++) {\n\n      let exists = copy[i][0].sensorID; //look into first element only\n      if (exists != undefined) return i;\n\n    }\n\n    return -1;\n  }\n\n  //essentially just map a dataset. \n  const createDataSets = () => {\n\n\n    setDataSet(bigArray.map((x, i) => ({\n      label: (typeof x[0].sensorID === 'undefined') ? 'No Sensor ID' : x[0].sensorID,\n      data: x.map((x) => x.sM),//might not need\n      borderWidth: 1,\n      fill: false,\n      borderColor: 'red'\n    })))\n\n  }\n\n  const vBatDisplay = () => {\n\n    setVBat(bigArray.map(x => ({\n      \"sensorID\": (typeof x[0].sensorID === 'undefined') ? 'No Sensor ID' : x[0].sensorID,\n      \"vBat\": x[x.length - 1].vBat //see if this value is anything\n    })))\n\n\n\n\n\n\n  }\n\n\n\n\n  var moistureData = {\n    labels: chart?.map(x=>x.expirationSet), //fix for legend lengths\n    datasets: dataSet\n  };\n\n  var options = {\n    maintainAspectRatio: false,\n    plugins: {\n      title: {\n        display: true,\n        text: 'Soil Moisture Data'\n      }\n    },\n    scales: {\n    },\n    legend: {\n      labels: {\n        fontSize: 25,\n      },\n    },\n  }\n\n  const displayVBat = {\n    labels: vBat.map(x => x.sensorID),\n    datasets: [\n      {\n        label: 'Battery Voltage',\n\n        borderColor: 'red',\n        borderWidth: 2,\n        data: vBat.map(x => x.vBat)\n      }\n    ]\n  }\n  console.log(vBat);\n  return (\n    <div>\n      <br />\n      <br />\n      <div className='moistureGraph'>\n        <Line\n          data={moistureData}\n          height={400}\n          options={options}\n        />\n      </div>\n      <div className='voltageGraph'>\n        <Bar\n          data={displayVBat}\n          height={400}\n          options={options}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default GraphManager4"]},"metadata":{},"sourceType":"module"}