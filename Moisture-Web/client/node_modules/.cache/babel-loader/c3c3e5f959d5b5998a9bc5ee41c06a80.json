{"ast":null,"code":"var _jsxFileName = \"/Users/ericg/Desktop/SNHS/Mosquito/Moisture-Web/client/src/Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport 'react-bootstrap';\nimport Nav from './features/navBar';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cooperCityWeatherId = 4151824;\nconst apiKey = process.env.REACT_APP_WEATHER_KEY;\nconst WeatherApiUrl = `http://api.openweathermap.org/data/2.5/weather?id=${cooperCityWeatherId}&appid=${apiKey}`;\n\nfunction Home() {\n  _s();\n\n  //usestate of weather data, can be an array\n  //useState of soil Moisture data, can also be an array\n  const [weatherData, setWeatherData] = useState(null);\n  const [soilMoisture, setSoilMoisture] = useState(null); //API data with a promise resolve nad useEffect\n\n  useEffect(() => {\n    const fetchData = () => {\n      Promise.all([fetch(WeatherApiUrl).then(resp => resp.json()).then(weather => setWeatherData(weather)).then(console.log(weatherData)), fetch('/api').then(resp => resp.json())]);\n    };\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Home\",\n    children: /*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Home, \"9E9T0CRUBLCTYnNb7NWYZRAdjjQ=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/ericg/Desktop/SNHS/Mosquito/Moisture-Web/client/src/Home.js"],"names":["React","useState","useEffect","Link","Nav","cooperCityWeatherId","apiKey","process","env","REACT_APP_WEATHER_KEY","WeatherApiUrl","Home","weatherData","setWeatherData","soilMoisture","setSoilMoisture","fetchData","Promise","all","fetch","then","resp","json","weather","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAO,iBAAP;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAO,sDAAP;;AAEA,MAAMC,mBAAmB,GAAG,OAA5B;AACA,MAAMC,MAAM,GAAGC,OAAO,CAACC,GAAR,CAAYC,qBAA3B;AAEA,MAAMC,aAAa,GAAI,qDAAoDL,mBAAoB,UAASC,MAAO,EAA/G;;AAEA,SAASK,IAAT,GAAe;AAAA;;AACX;AACA;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,CAAC,IAAD,CAA9C;AACA,QAAM,CAACa,YAAD,EAAeC,eAAf,IAAkCd,QAAQ,CAAC,IAAD,CAAhD,CAJW,CAOX;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMc,SAAS,GAAG,MAAK;AAEnBC,MAAAA,OAAO,CAACC,GAAR,CAAY,CACRC,KAAK,CAACT,aAAD,CAAL,CAAqBU,IAArB,CAA0BC,IAAI,IAAIA,IAAI,CAACC,IAAL,EAAlC,EAA+CF,IAA/C,CAAoDG,OAAO,IAAIV,cAAc,CAACU,OAAD,CAA7E,EAAwFH,IAAxF,CAA6FI,OAAO,CAACC,GAAR,CAAYb,WAAZ,CAA7F,CADQ,EAERO,KAAK,CAAC,MAAD,CAAL,CAAcC,IAAd,CAAmBC,IAAI,IAAIA,IAAI,CAACC,IAAL,EAA3B,CAFQ,CAAZ;AAKH,KAPD;;AAQDN,IAAAA,SAAS;AAEX,GAXQ,EAWP,EAXO,CAAT;AAaA,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,2BACI,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH;;GAjCQL,I;;KAAAA,I;AAkCT,eAAeA,IAAf","sourcesContent":["import React, {useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport 'react-bootstrap';\nimport Nav from './features/navBar' ;\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\nconst cooperCityWeatherId = 4151824;\nconst apiKey = process.env.REACT_APP_WEATHER_KEY;\n\nconst WeatherApiUrl = `http://api.openweathermap.org/data/2.5/weather?id=${cooperCityWeatherId}&appid=${apiKey}`\n\nfunction Home(){\n    //usestate of weather data, can be an array\n    //useState of soil Moisture data, can also be an array\n    const [weatherData, setWeatherData] = useState(null);\n    const [soilMoisture, setSoilMoisture] = useState(null);\n\n\n    //API data with a promise resolve nad useEffect\n    useEffect(() => {\n        const fetchData = () =>{\n    \n            Promise.all([\n                fetch(WeatherApiUrl).then(resp => resp.json()).then(weather => setWeatherData(weather)).then(console.log(weatherData)),\n                fetch('/api').then(resp => resp.json()),\n            ]);\n        \n        }\n       fetchData()\n       \n    },[])\n\n    return(\n        <div className=\"Home\">\n            <Nav />\n        </div>\n\n        \n        \n    );\n\n\n\n\n}\nexport default Home;\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}