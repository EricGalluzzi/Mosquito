[{"/Users/ericg/Desktop/SNHS/Mosquito/Moisture-Web/client/src/index.js":"1","/Users/ericg/Desktop/SNHS/Mosquito/Moisture-Web/client/src/App.js":"2","/Users/ericg/Desktop/SNHS/Mosquito/Moisture-Web/client/src/reportWebVitals.js":"3","/Users/ericg/Desktop/SNHS/Mosquito/Moisture-Web/client/src/Home.js":"4","/Users/ericg/Desktop/SNHS/Mosquito/Moisture-Web/client/src/features/navBar.js":"5","/Users/ericg/Desktop/SNHS/Mosquito/Moisture-Web/client/src/testFeatures/LineChartTest.js":"6","/Users/ericg/Desktop/SNHS/Mosquito/Moisture-Web/client/src/testFeatures/BreakComputer.js":"7","/Users/ericg/Desktop/SNHS/Mosquito/Moisture-Web/client/src/features/graphManager.js":"8","/Users/ericg/Desktop/SNHS/Mosquito/Moisture-Web/client/src/testFeatures/reFactorV2.js":"9"},{"size":462,"mtime":1641577743256,"results":"10","hashOfConfig":"11"},{"size":461,"mtime":1641579104440,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1641575237660,"results":"13","hashOfConfig":"11"},{"size":1764,"mtime":1644242257189,"results":"14","hashOfConfig":"11"},{"size":653,"mtime":1644242255796,"results":"15","hashOfConfig":"11"},{"size":2063,"mtime":1642909419539,"results":"16","hashOfConfig":"11"},{"size":3481,"mtime":1643560047957,"results":"17","hashOfConfig":"11"},{"size":2854,"mtime":1644242734505,"results":"18","hashOfConfig":"11"},{"size":2606,"mtime":1643686032934,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"8efvki",{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":4,"source":null},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},"/Users/ericg/Desktop/SNHS/Mosquito/Moisture-Web/client/src/index.js",[],["43","44"],"/Users/ericg/Desktop/SNHS/Mosquito/Moisture-Web/client/src/App.js",["45"],"import logo from './logo.svg';\nimport './App.css';\nimport React from 'react';\nimport {\n    Route,\n    BrowserRouter,\n    Routes,\n} from \"react-router-dom\";\nimport Home from './Home';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport 'react-bootstrap';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Routes>\n      <Route exact path=\"/\" element={<Home/>}></Route>\n      </Routes>\n    </BrowserRouter>\n    \n  );\n}\n\nexport default App;\n","/Users/ericg/Desktop/SNHS/Mosquito/Moisture-Web/client/src/reportWebVitals.js",[],"/Users/ericg/Desktop/SNHS/Mosquito/Moisture-Web/client/src/Home.js",["46","47","48","49"],"\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { ProgressBar } from 'react-bootstrap';\n\nimport Nav from './features/navBar';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\nimport GraphManager from './features/graphManager'\n\n\nfunction Home() {\n    //usestate of weather data, can be an array\n    //useState of soil Moisture data, can also be an array\n\n    const [restAPI, setRestAPI] = useState([]); //will contain backend sensor data.\n\n    /* form of \n        [temp : 25,\n\t\thumidity : 88,\n\t\tpressure : 101325,\n\t\tdescription : 'sun',\n        weathercode : 200\n        sM : 100\n        VBat: 69]\n        \n        add picture functionality.\n    */\n    const [loading, setLoading] = useState(true); //only display page once data is loaded\n    const [err, setError] = useState(null); // handle errors\n    useEffect(() => { //render website when mounted\n\n        const fetchData = async () => { //used callback hell because await was throwing issues\n\n            fetch('http://localhost:3001/api').then(re => {\n                if (re.ok) {\n                    return re.json()\n                }\n                throw re\n            }).then(data => {\n                setRestAPI(data)\n                console.log(data)\n\n            }).catch(err => {\n                console.log(err)\n                //setError(err)\n            }).finally(() => {\n                setLoading(false);\n\n            })\n\n\n        }\n       \n        fetchData()\n\n\n    }, []) \n\n    \n    if (err) return \"error\";\n\n    return (\n        <div className=\"Home\">\n            <Nav />\n            <div>\n            \n                <GraphManager data={restAPI} />\n            </div>\n        </div>\n\n    );\n\n}\nexport default Home;\n\n\n\n\n\n","/Users/ericg/Desktop/SNHS/Mosquito/Moisture-Web/client/src/features/navBar.js",["50"],"import React, { Component } from 'react';\n\nimport {Navbar, Container} from 'react-bootstrap';\n//handle navBar\n\nfunction Nav(){\n    return(\n        <Navbar bg=\"dark\" variant=\"dark\" style={{ marginBottom: '1em' }}>\n          <Container>\n            <Navbar.Brand className=\"navbar-brand mx-auto\" style={{ fontSize: \"1.75em\" }}>\n              Soil Moisture Data\n</Navbar.Brand>\n            <Navbar.Collapse className=\"justify-content-end\">\n              <Navbar.Text>\n                Eric Galluzzi : ericbriangall2004@gmail.com\n</Navbar.Text>\n            </Navbar.Collapse>\n          </Container>\n        </Navbar>\n        \n    );\n\n\n\n\n}\nexport default Nav;","/Users/ericg/Desktop/SNHS/Mosquito/Moisture-Web/client/src/testFeatures/LineChartTest.js",["51","52","53","54","55","56","57"],"/Users/ericg/Desktop/SNHS/Mosquito/Moisture-Web/client/src/testFeatures/BreakComputer.js",["58","59","60","61","62","63"],"/Users/ericg/Desktop/SNHS/Mosquito/Moisture-Web/client/src/features/graphManager.js",["64","65"],"/Users/ericg/Desktop/SNHS/Mosquito/Moisture-Web/client/src/testFeatures/reFactorV2.js",["66","67"],"import React, { useState, useEffect } from 'react'\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  BarController,\n  BarElement,\n} from 'chart.js';\nimport { ProgressBar } from 'react-bootstrap';\nimport { Line, Bar } from 'react-chartjs-2';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  BarController,\n  BarElement\n);\n\n\nconst GraphManager = (chart) => {\n  let [vBat, setVBat] = useState([]); //format, array of object ID and vBat\n  let [dataSet, setDataSet] = useState([]);\n  \n \n  let [isLoaded, setLoaded] = useState(false); //duplicate testing for dev\n\n  useEffect(() => {\n\n\n    if (chart.data.length > 0) {\n      if (!isLoaded) {\n\n    \n        createDataSets();\n        vBatDisplay();\n        setLoaded(true);\n\n      }\n    }\n\n    //createDataSets()\n\n  }, [chart])\n\n\n  \n\n\n\n//chart->data->each data member then has to map through its entries\n\n \n\n  //essentially just map a dataset. \n  const createDataSets = () => {\n\n\n    setDataSet(chart.data.map(x => ({\n      label: (typeof x.sensorID === 'undefined') ? 'No Sensor ID' : x.sensorID,\n      data: x.entry.map((y) => y.sM),//might not need\n      borderWidth: 1,\n      fill: false,\n      borderColor: 'red'\n    })))\n\n  }\n\n  const vBatDisplay = () => {\n\n    setVBat(chart.data.map(x => ({\n       \"sensorID\": (typeof x.sensorID === 'undefined') ? 'No Sensor ID' : x.sensorID,\n      \"vBat\": x.entry[x.entry.length-1].vBat //see if this value is anything\n     })))\n\n\n\n\n\n\n  }\n\n\n\n\n  var moistureData = {\n    labels: \"hip\", //fix for legend lengths\n    datasets: dataSet\n  };\n\n  var options = {\n    maintainAspectRatio: false,\n    plugins: {\n      title: {\n        display: true,\n        text: 'Soil Moisture Data'\n      }\n    },\n    scales: {\n    },\n    legend: {\n      labels: {\n        fontSize: 25,\n      },\n    },\n  }\n\n  const displayVBat = {\n    labels: chart.data.map(x => x.sensorID),\n    datasets: [\n      {\n        label: 'Battery Voltage',\n\n        borderColor: 'red',\n        borderWidth: 2,\n        data: chart.data.map(x => (x.entry[x.entry.length-1].vBat/1000.0))\n      }\n    ]\n  }\n  console.log(vBat);\n  return (\n    <div>\n      <br />\n      <br />\n      <div className='moistureGraph'>\n        <Line\n          data={moistureData}\n          height={400}\n          options={options}\n        />\n      </div>\n      <div className='voltageGraph'>\n        <Bar\n          data={displayVBat}\n          height={400}\n          options={options}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default GraphManager",{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":1,"column":8,"nodeType":"74","messageId":"75","endLine":1,"endColumn":12},{"ruleId":"72","severity":1,"message":"76","line":3,"column":10,"nodeType":"74","messageId":"75","endLine":3,"endColumn":14},{"ruleId":"72","severity":1,"message":"77","line":4,"column":10,"nodeType":"74","messageId":"75","endLine":4,"endColumn":21},{"ruleId":"72","severity":1,"message":"78","line":29,"column":12,"nodeType":"74","messageId":"75","endLine":29,"endColumn":19},{"ruleId":"72","severity":1,"message":"79","line":30,"column":17,"nodeType":"74","messageId":"75","endLine":30,"endColumn":25},{"ruleId":"72","severity":1,"message":"80","line":1,"column":17,"nodeType":"74","messageId":"75","endLine":1,"endColumn":26},{"ruleId":"72","severity":1,"message":"77","line":12,"column":10,"nodeType":"74","messageId":"75","endLine":12,"endColumn":21},{"ruleId":"72","severity":1,"message":"81","line":27,"column":10,"nodeType":"74","messageId":"75","endLine":27,"endColumn":14},{"ruleId":"82","severity":1,"message":"83","line":30,"column":15,"nodeType":"84","messageId":"85","endLine":30,"endColumn":52,"fix":"86"},{"ruleId":"82","severity":1,"message":"87","line":30,"column":15,"nodeType":"84","messageId":"85","endLine":30,"endColumn":35,"fix":"88"},{"ruleId":"82","severity":1,"message":"89","line":30,"column":15,"nodeType":"84","messageId":"85","endLine":30,"endColumn":27,"fix":"90"},{"ruleId":"91","severity":1,"message":"92","line":32,"column":8,"nodeType":"93","endLine":32,"endColumn":15,"suggestions":"94"},{"ruleId":"82","severity":1,"message":"89","line":57,"column":15,"nodeType":"84","messageId":"85","endLine":57,"endColumn":27,"fix":"95"},{"ruleId":"72","severity":1,"message":"77","line":14,"column":10,"nodeType":"74","messageId":"75","endLine":14,"endColumn":21},{"ruleId":"72","severity":1,"message":"96","line":34,"column":8,"nodeType":"74","messageId":"75","endLine":34,"endColumn":22},{"ruleId":"91","severity":1,"message":"97","line":53,"column":6,"nodeType":"93","endLine":53,"endColumn":13,"suggestions":"98"},{"ruleId":"99","severity":1,"message":"100","line":60,"column":22,"nodeType":"101","messageId":"102","endLine":60,"endColumn":24},{"ruleId":"99","severity":1,"message":"100","line":62,"column":21,"nodeType":"101","messageId":"102","endLine":62,"endColumn":23},{"ruleId":"103","severity":1,"message":"104","line":90,"column":18,"nodeType":"105","messageId":"106","endLine":90,"endColumn":20},{"ruleId":"72","severity":1,"message":"77","line":14,"column":10,"nodeType":"74","messageId":"75","endLine":14,"endColumn":21},{"ruleId":"91","severity":1,"message":"107","line":53,"column":6,"nodeType":"93","endLine":53,"endColumn":13,"suggestions":"108"},{"ruleId":"72","severity":1,"message":"77","line":14,"column":10,"nodeType":"74","messageId":"75","endLine":14,"endColumn":21},{"ruleId":"91","severity":1,"message":"107","line":53,"column":6,"nodeType":"93","endLine":53,"endColumn":13,"suggestions":"109"},"no-native-reassign",["110"],"no-negated-in-lhs",["111"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'ProgressBar' is defined but never used.","'loading' is assigned a value but never used.","'setError' is assigned a value but never used.","'Component' is defined but never used.","'vBat' is assigned a value but never used.","no-whitespace-before-property","Unexpected whitespace before property VBat.","MemberExpression","unexpectedWhitespace",{"range":"112","text":"113"},"Unexpected whitespace before property slice.",{"range":"114","text":"113"},"Unexpected whitespace before property data.",{"range":"115","text":"113"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'createDataSets'. Either include it or remove the dependency array.","ArrayExpression",["116"],{"range":"117","text":"113"},"'bigArrayLoaded' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'createDataSets', 'initializeBigArray', 'isLoaded', and 'vBatDisplay'. Either include them or remove the dependency array.",["118"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'createDataSets', 'isLoaded', and 'vBatDisplay'. Either include them or remove the dependency array.",["119"],["120"],"no-global-assign","no-unsafe-negation",[579,582],"?.",[561,564],[554,557],{"desc":"121","fix":"122"},[1522,1525],{"desc":"123","fix":"124"},{"desc":"125","fix":"126"},{"desc":"125","fix":"127"},"Update the dependencies array to be: [chart, createDataSets]",{"range":"128","text":"129"},"Update the dependencies array to be: [chart, createDataSets, initializeBigArray, isLoaded, vBatDisplay]",{"range":"130","text":"131"},"Update the dependencies array to be: [chart, createDataSets, isLoaded, vBatDisplay]",{"range":"132","text":"133"},{"range":"134","text":"133"},[698,705],"[chart, createDataSets]",[1028,1035],"[chart, createDataSets, initializeBigArray, isLoaded, vBatDisplay]",[1050,1057],"[chart, createDataSets, isLoaded, vBatDisplay]",[900,907]]